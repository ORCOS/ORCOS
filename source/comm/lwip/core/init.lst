   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"init.c"
  19              	.Ltext0:
  20              		.align	2
  21              		.global	lwip_init
  23              	lwip_init:
  24              	.LFB0:
  25              		.file 1 "./src/lwip/core/init.c"
   1:./src/lwip/core/init.c **** /**
   2:./src/lwip/core/init.c ****  * @file
   3:./src/lwip/core/init.c ****  * Modules initialization
   4:./src/lwip/core/init.c ****  *
   5:./src/lwip/core/init.c ****  */
   6:./src/lwip/core/init.c **** 
   7:./src/lwip/core/init.c **** /*
   8:./src/lwip/core/init.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:./src/lwip/core/init.c ****  * All rights reserved. 
  10:./src/lwip/core/init.c ****  * 
  11:./src/lwip/core/init.c ****  * Redistribution and use in source and binary forms, with or without modification, 
  12:./src/lwip/core/init.c ****  * are permitted provided that the following conditions are met:
  13:./src/lwip/core/init.c ****  *
  14:./src/lwip/core/init.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  15:./src/lwip/core/init.c ****  *    this list of conditions and the following disclaimer.
  16:./src/lwip/core/init.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:./src/lwip/core/init.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:./src/lwip/core/init.c ****  *    and/or other materials provided with the distribution.
  19:./src/lwip/core/init.c ****  * 3. The name of the author may not be used to endorse or promote products
  20:./src/lwip/core/init.c ****  *    derived from this software without specific prior written permission. 
  21:./src/lwip/core/init.c ****  *
  22:./src/lwip/core/init.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED 
  23:./src/lwip/core/init.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  24:./src/lwip/core/init.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
  25:./src/lwip/core/init.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
  26:./src/lwip/core/init.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
  27:./src/lwip/core/init.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  28:./src/lwip/core/init.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  29:./src/lwip/core/init.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
  30:./src/lwip/core/init.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  31:./src/lwip/core/init.c ****  * OF SUCH DAMAGE.
  32:./src/lwip/core/init.c ****  *
  33:./src/lwip/core/init.c ****  * This file is part of the lwIP TCP/IP stack.
  34:./src/lwip/core/init.c ****  * 
  35:./src/lwip/core/init.c ****  * Author: Adam Dunkels <adam@sics.se>
  36:./src/lwip/core/init.c ****  *
  37:./src/lwip/core/init.c ****  */
  38:./src/lwip/core/init.c **** 
  39:./src/lwip/core/init.c **** #include "lwip/opt.h"
  40:./src/lwip/core/init.c **** 
  41:./src/lwip/core/init.c **** #include "lwip/init.h"
  42:./src/lwip/core/init.c **** #include "lwip/stats.h"
  43:./src/lwip/core/init.c **** #include "lwip/sys.h"
  44:./src/lwip/core/init.c **** #include "lwip/mem.h"
  45:./src/lwip/core/init.c **** #include "lwip/memp.h"
  46:./src/lwip/core/init.c **** #include "lwip/pbuf.h"
  47:./src/lwip/core/init.c **** #include "lwip/netif.h"
  48:./src/lwip/core/init.c **** #include "lwip/sockets.h"
  49:./src/lwip/core/init.c **** #include "lwip/ip.h"
  50:./src/lwip/core/init.c **** #include "lwip/raw.h"
  51:./src/lwip/core/init.c **** #include "lwip/udp.h"
  52:./src/lwip/core/init.c **** #include "lwip/tcp.h"
  53:./src/lwip/core/init.c **** #include "lwip/snmp_msg.h"
  54:./src/lwip/core/init.c **** #include "lwip/autoip.h"
  55:./src/lwip/core/init.c **** #include "lwip/igmp.h"
  56:./src/lwip/core/init.c **** #include "lwip/dns.h"
  57:./src/lwip/core/init.c **** #include "netif/etharp.h"
  58:./src/lwip/core/init.c **** 
  59:./src/lwip/core/init.c **** /* Compile-time sanity checks for configuration errors.
  60:./src/lwip/core/init.c ****  * These can be done independently of LWIP_DEBUG, without penalty.
  61:./src/lwip/core/init.c ****  */
  62:./src/lwip/core/init.c **** #ifndef BYTE_ORDER
  63:./src/lwip/core/init.c ****   #error "BYTE_ORDER is not defined, you have to define it in your cc.h"
  64:./src/lwip/core/init.c **** #endif
  65:./src/lwip/core/init.c **** #if (!IP_SOF_BROADCAST && IP_SOF_BROADCAST_RECV)
  66:./src/lwip/core/init.c ****   #error "If you want to use broadcast filter per pcb on recv operations, you have to define IP_SOF
  67:./src/lwip/core/init.c **** #endif
  68:./src/lwip/core/init.c **** #if (!LWIP_ARP && ARP_QUEUEING)
  69:./src/lwip/core/init.c ****   #error "If you want to use ARP Queueing, you have to define LWIP_ARP=1 in your lwipopts.h"
  70:./src/lwip/core/init.c **** #endif
  71:./src/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_UDPLITE)
  72:./src/lwip/core/init.c ****   #error "If you want to use UDP Lite, you have to define LWIP_UDP=1 in your lwipopts.h"
  73:./src/lwip/core/init.c **** #endif
  74:./src/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_SNMP)
  75:./src/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define LWIP_UDP=1 in your lwipopts.h"
  76:./src/lwip/core/init.c **** #endif
  77:./src/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_DHCP)
  78:./src/lwip/core/init.c ****   #error "If you want to use DHCP, you have to define LWIP_UDP=1 in your lwipopts.h"
  79:./src/lwip/core/init.c **** #endif
  80:./src/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_IGMP)
  81:./src/lwip/core/init.c ****   #error "If you want to use IGMP, you have to define LWIP_UDP=1 in your lwipopts.h"
  82:./src/lwip/core/init.c **** #endif
  83:./src/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_DNS)
  84:./src/lwip/core/init.c ****   #error "If you want to use DNS, you have to define LWIP_UDP=1 in your lwipopts.h"
  85:./src/lwip/core/init.c **** #endif
  86:./src/lwip/core/init.c **** #if (LWIP_ARP && (ARP_TABLE_SIZE > 0x7f))
  87:./src/lwip/core/init.c ****   #error "If you want to use ARP, ARP_TABLE_SIZE must fit in an s8_t, so, you have to reduce it in 
  88:./src/lwip/core/init.c **** #endif
  89:./src/lwip/core/init.c **** #if (LWIP_ARP && ARP_QUEUEING && (MEMP_NUM_ARP_QUEUE<=0))
  90:./src/lwip/core/init.c ****   #error "If you want to use ARP Queueing, you have to define MEMP_NUM_ARP_QUEUE>=1 in your lwipopt
  91:./src/lwip/core/init.c **** #endif
  92:./src/lwip/core/init.c **** #if (LWIP_RAW && (MEMP_NUM_RAW_PCB<=0))
  93:./src/lwip/core/init.c ****   #error "If you want to use RAW, you have to define MEMP_NUM_RAW_PCB>=1 in your lwipopts.h"
  94:./src/lwip/core/init.c **** #endif
  95:./src/lwip/core/init.c **** #if (LWIP_UDP && (MEMP_NUM_UDP_PCB<=0))
  96:./src/lwip/core/init.c ****   #error "If you want to use UDP, you have to define MEMP_NUM_UDP_PCB>=1 in your lwipopts.h"
  97:./src/lwip/core/init.c **** #endif
  98:./src/lwip/core/init.c **** #if (LWIP_TCP && (MEMP_NUM_TCP_PCB<=0))
  99:./src/lwip/core/init.c ****   #error "If you want to use TCP, you have to define MEMP_NUM_TCP_PCB>=1 in your lwipopts.h"
 100:./src/lwip/core/init.c **** #endif
 101:./src/lwip/core/init.c **** #if (LWIP_TCP && (TCP_WND > 0xffff))
 102:./src/lwip/core/init.c ****   #error "If you want to use TCP, TCP_WND must fit in an u16_t, so, you have to reduce it in your l
 103:./src/lwip/core/init.c **** #endif
 104:./src/lwip/core/init.c **** #if (LWIP_TCP && (TCP_SND_QUEUELEN > 0xffff))
 105:./src/lwip/core/init.c ****   #error "If you want to use TCP, TCP_SND_QUEUELEN must fit in an u16_t, so, you have to reduce it 
 106:./src/lwip/core/init.c **** #endif
 107:./src/lwip/core/init.c **** #if (LWIP_TCP && ((TCP_MAXRTX > 12) || (TCP_SYNMAXRTX > 12)))
 108:./src/lwip/core/init.c ****   #error "If you want to use TCP, TCP_MAXRTX and TCP_SYNMAXRTX must less or equal to 12 (due to tcp
 109:./src/lwip/core/init.c **** #endif
 110:./src/lwip/core/init.c **** #if (LWIP_TCP && TCP_LISTEN_BACKLOG && (TCP_DEFAULT_LISTEN_BACKLOG < 0) || (TCP_DEFAULT_LISTEN_BACK
 111:./src/lwip/core/init.c ****   #error "If you want to use TCP backlog, TCP_DEFAULT_LISTEN_BACKLOG must fit into an u8_t"
 112:./src/lwip/core/init.c **** #endif
 113:./src/lwip/core/init.c **** #if (LWIP_IGMP && (MEMP_NUM_IGMP_GROUP<=1))
 114:./src/lwip/core/init.c ****   #error "If you want to use IGMP, you have to define MEMP_NUM_IGMP_GROUP>1 in your lwipopts.h"
 115:./src/lwip/core/init.c **** #endif
 116:./src/lwip/core/init.c **** #if (PPP_SUPPORT && (NO_SYS==1))
 117:./src/lwip/core/init.c ****   #error "If you want to use PPP, you have to define NO_SYS=0 in your lwipopts.h"
 118:./src/lwip/core/init.c **** #endif 
 119:./src/lwip/core/init.c **** #if (LWIP_NETIF_API && (NO_SYS==1))
 120:./src/lwip/core/init.c ****   #error "If you want to use NETIF API, you have to define NO_SYS=0 in your lwipopts.h"
 121:./src/lwip/core/init.c **** #endif
 122:./src/lwip/core/init.c **** #if ((LWIP_SOCKET || LWIP_NETCONN) && (NO_SYS==1))
 123:./src/lwip/core/init.c ****   #error "If you want to use Sequential API, you have to define NO_SYS=0 in your lwipopts.h"
 124:./src/lwip/core/init.c **** #endif
 125:./src/lwip/core/init.c **** #if ((LWIP_NETCONN || LWIP_SOCKET) && (MEMP_NUM_TCPIP_MSG_API<=0))
 126:./src/lwip/core/init.c ****   #error "If you want to use Sequential API, you have to define MEMP_NUM_TCPIP_MSG_API>=1 in your l
 127:./src/lwip/core/init.c **** #endif
 128:./src/lwip/core/init.c **** #if (!LWIP_NETCONN && LWIP_SOCKET)
 129:./src/lwip/core/init.c ****   #error "If you want to use Socket API, you have to define LWIP_NETCONN=1 in your lwipopts.h"
 130:./src/lwip/core/init.c **** #endif
 131:./src/lwip/core/init.c **** #if (((!LWIP_DHCP) || (!LWIP_AUTOIP)) && LWIP_DHCP_AUTOIP_COOP)
 132:./src/lwip/core/init.c ****   #error "If you want to use DHCP/AUTOIP cooperation mode, you have to define LWIP_DHCP=1 and LWIP_
 133:./src/lwip/core/init.c **** #endif
 134:./src/lwip/core/init.c **** #if (((!LWIP_DHCP) || (!LWIP_ARP)) && DHCP_DOES_ARP_CHECK)
 135:./src/lwip/core/init.c ****   #error "If you want to use DHCP ARP checking, you have to define LWIP_DHCP=1 and LWIP_ARP=1 in yo
 136:./src/lwip/core/init.c **** #endif
 137:./src/lwip/core/init.c **** #if (!LWIP_ARP && LWIP_AUTOIP)
 138:./src/lwip/core/init.c ****   #error "If you want to use AUTOIP, you have to define LWIP_ARP=1 in your lwipopts.h"
 139:./src/lwip/core/init.c **** #endif
 140:./src/lwip/core/init.c **** #if (LWIP_SNMP && (SNMP_CONCURRENT_REQUESTS<=0))
 141:./src/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define SNMP_CONCURRENT_REQUESTS>=1 in your lwipopts.
 142:./src/lwip/core/init.c **** #endif
 143:./src/lwip/core/init.c **** #if (LWIP_SNMP && (SNMP_TRAP_DESTINATIONS<=0))
 144:./src/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define SNMP_TRAP_DESTINATIONS>=1 in your lwipopts.h"
 145:./src/lwip/core/init.c **** #endif
 146:./src/lwip/core/init.c **** #if (LWIP_TCP && ((LWIP_EVENT_API && LWIP_CALLBACK_API) || (!LWIP_EVENT_API && !LWIP_CALLBACK_API))
 147:./src/lwip/core/init.c ****   #error "One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled in your lwi
 148:./src/lwip/core/init.c **** #endif
 149:./src/lwip/core/init.c **** /* There must be sufficient timeouts, taking into account requirements of the subsystems. */
 150:./src/lwip/core/init.c **** #if ((NO_SYS==0) && (MEMP_NUM_SYS_TIMEOUT < (LWIP_TCP + IP_REASSEMBLY + LWIP_ARP + (2*LWIP_DHCP) + 
 151:./src/lwip/core/init.c ****   #error "MEMP_NUM_SYS_TIMEOUT is too low to accomodate all required timeouts"
 152:./src/lwip/core/init.c **** #endif
 153:./src/lwip/core/init.c **** #if (IP_REASSEMBLY && (MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS))
 154:./src/lwip/core/init.c ****   #error "MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS doesn't make sense since each struct ip_reassdata
 155:./src/lwip/core/init.c **** #endif
 156:./src/lwip/core/init.c **** #if (MEM_LIBC_MALLOC && MEM_USE_POOLS)
 157:./src/lwip/core/init.c ****   #error "MEM_LIBC_MALLOC and MEM_USE_POOLS may not both be simultaneously enabled in your lwipopts
 158:./src/lwip/core/init.c **** #endif
 159:./src/lwip/core/init.c **** #if (MEM_USE_POOLS && !MEMP_USE_CUSTOM_POOLS)
 160:./src/lwip/core/init.c ****   #error "MEM_USE_POOLS requires custom pools (MEMP_USE_CUSTOM_POOLS) to be enabled in your lwipopt
 161:./src/lwip/core/init.c **** #endif
 162:./src/lwip/core/init.c **** #if (PBUF_POOL_BUFSIZE <= MEM_ALIGNMENT)
 163:./src/lwip/core/init.c ****   #error "PBUF_POOL_BUFSIZE must be greater than MEM_ALIGNMENT or the offset may take the full firs
 164:./src/lwip/core/init.c **** #endif
 165:./src/lwip/core/init.c **** #if (TCP_QUEUE_OOSEQ && !LWIP_TCP)
 166:./src/lwip/core/init.c ****   #error "TCP_QUEUE_OOSEQ requires LWIP_TCP"
 167:./src/lwip/core/init.c **** #endif
 168:./src/lwip/core/init.c **** #if (DNS_LOCAL_HOSTLIST && !DNS_LOCAL_HOSTLIST_IS_DYNAMIC && !(defined(DNS_LOCAL_HOSTLIST_INIT)))
 169:./src/lwip/core/init.c ****   #error "you have to define define DNS_LOCAL_HOSTLIST_INIT {{'host1', 0x123}, {'host2', 0x234}} to
 170:./src/lwip/core/init.c **** #endif
 171:./src/lwip/core/init.c **** #if PPP_SUPPORT && !PPPOS_SUPPORT & !PPPOE_SUPPORT
 172:./src/lwip/core/init.c ****   #error "PPP_SUPPORT needs either PPPOS_SUPPORT or PPPOE_SUPPORT turned on"
 173:./src/lwip/core/init.c **** #endif
 174:./src/lwip/core/init.c **** 
 175:./src/lwip/core/init.c **** 
 176:./src/lwip/core/init.c **** /* Compile-time checks for deprecated options.
 177:./src/lwip/core/init.c ****  */
 178:./src/lwip/core/init.c **** #ifdef MEMP_NUM_TCPIP_MSG
 179:./src/lwip/core/init.c ****   #error "MEMP_NUM_TCPIP_MSG option is deprecated. Remove it from your lwipopts.h."
 180:./src/lwip/core/init.c **** #endif
 181:./src/lwip/core/init.c **** #ifdef MEMP_NUM_API_MSG
 182:./src/lwip/core/init.c ****   #error "MEMP_NUM_API_MSG option is deprecated. Remove it from your lwipopts.h."
 183:./src/lwip/core/init.c **** #endif
 184:./src/lwip/core/init.c **** #ifdef TCP_REXMIT_DEBUG
 185:./src/lwip/core/init.c ****   #error "TCP_REXMIT_DEBUG option is deprecated. Remove it from your lwipopts.h."
 186:./src/lwip/core/init.c **** #endif
 187:./src/lwip/core/init.c **** #ifdef RAW_STATS
 188:./src/lwip/core/init.c ****   #error "RAW_STATS option is deprecated. Remove it from your lwipopts.h."
 189:./src/lwip/core/init.c **** #endif
 190:./src/lwip/core/init.c **** #ifdef ETHARP_QUEUE_FIRST
 191:./src/lwip/core/init.c ****   #error "ETHARP_QUEUE_FIRST option is deprecated. Remove it from your lwipopts.h."
 192:./src/lwip/core/init.c **** #endif
 193:./src/lwip/core/init.c **** #ifdef ETHARP_ALWAYS_INSERT
 194:./src/lwip/core/init.c ****   #error "ETHARP_ALWAYS_INSERT option is deprecated. Remove it from your lwipopts.h."
 195:./src/lwip/core/init.c **** #endif
 196:./src/lwip/core/init.c **** #if SO_REUSE
 197:./src/lwip/core/init.c **** /* I removed the lot since this was an ugly hack. It broke the raw-API.
 198:./src/lwip/core/init.c ****    It also came with many ugly goto's, Christiaan Simons. */
 199:./src/lwip/core/init.c ****   #error "SO_REUSE currently unavailable, this was a hack"
 200:./src/lwip/core/init.c **** #endif
 201:./src/lwip/core/init.c **** 
 202:./src/lwip/core/init.c **** #ifdef LWIP_DEBUG
 203:./src/lwip/core/init.c **** static void
 204:./src/lwip/core/init.c **** lwip_sanity_check(void)
 205:./src/lwip/core/init.c **** {
 206:./src/lwip/core/init.c ****   /* Warnings */
 207:./src/lwip/core/init.c **** #if LWIP_NETCONN
 208:./src/lwip/core/init.c ****   if (MEMP_NUM_NETCONN > (MEMP_NUM_TCP_PCB+MEMP_NUM_TCP_PCB_LISTEN+MEMP_NUM_UDP_PCB+MEMP_NUM_RAW_PC
 209:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: MEMP_NUM_NETCONN should be less than the sum o
 210:./src/lwip/core/init.c **** #endif /* LWIP_NETCONN */
 211:./src/lwip/core/init.c **** #if LWIP_TCP
 212:./src/lwip/core/init.c ****   if (MEMP_NUM_TCP_SEG < TCP_SND_QUEUELEN)
 213:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: MEMP_NUM_TCP_SEG should be at least as big as 
 214:./src/lwip/core/init.c ****   if (TCP_SND_BUF < 2 * TCP_MSS)
 215:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: TCP_SND_BUF must be at least as much as (2 * T
 216:./src/lwip/core/init.c ****   if (TCP_SND_QUEUELEN < (2 * (TCP_SND_BUF/TCP_MSS)))
 217:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: TCP_SND_QUEUELEN must be at least as much as (
 218:./src/lwip/core/init.c ****   if (TCP_SNDLOWAT > TCP_SND_BUF)
 219:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: TCP_SNDLOWAT must be less than or equal to TCP
 220:./src/lwip/core/init.c ****   if (TCP_WND > (PBUF_POOL_SIZE*PBUF_POOL_BUFSIZE))
 221:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: TCP_WND is larger than space provided by PBUF_
 222:./src/lwip/core/init.c ****   if (TCP_WND < TCP_MSS)
 223:./src/lwip/core/init.c ****     LWIP_PLATFORM_DIAG(("lwip_sanity_check: WARNING: TCP_WND is smaller than MSS\n"));
 224:./src/lwip/core/init.c **** #endif /* LWIP_TCP */
 225:./src/lwip/core/init.c **** }
 226:./src/lwip/core/init.c **** #else  /* LWIP_DEBUG */
 227:./src/lwip/core/init.c **** #define lwip_sanity_check()
 228:./src/lwip/core/init.c **** #endif /* LWIP_DEBUG */
 229:./src/lwip/core/init.c **** 
 230:./src/lwip/core/init.c **** /**
 231:./src/lwip/core/init.c ****  * Perform Sanity check of user-configurable values, and initialize all modules.
 232:./src/lwip/core/init.c ****  */
 233:./src/lwip/core/init.c **** void
 234:./src/lwip/core/init.c **** lwip_init(void)
 235:./src/lwip/core/init.c **** {
  26              		.loc 1 235 0
  27              		@ Function supports interworking.
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 00482DE9 		stmfd	sp!, {fp, lr}
  31              	.LCFI0:
  32 0004 04B08DE2 		add	fp, sp, #4
  33              	.LCFI1:
 236:./src/lwip/core/init.c ****   /* Sanity check user-configurable values */
 237:./src/lwip/core/init.c ****   lwip_sanity_check();
 238:./src/lwip/core/init.c **** 
 239:./src/lwip/core/init.c ****   /* Modules initialization */
 240:./src/lwip/core/init.c ****   stats_init();
 241:./src/lwip/core/init.c ****   sys_init();
  34              		.loc 1 241 0
  35 0008 FEFFFFEB 		bl	sys_init
 242:./src/lwip/core/init.c ****   mem_init();
  36              		.loc 1 242 0
  37 000c FEFFFFEB 		bl	mem_init
 243:./src/lwip/core/init.c ****   memp_init();
  38              		.loc 1 243 0
  39 0010 FEFFFFEB 		bl	memp_init
 244:./src/lwip/core/init.c ****   pbuf_init();
 245:./src/lwip/core/init.c ****   netif_init();
 246:./src/lwip/core/init.c **** #if LWIP_SOCKET
 247:./src/lwip/core/init.c ****   lwip_socket_init();
  40              		.loc 1 247 0
  41 0014 FEFFFFEB 		bl	lwip_socket_init
 248:./src/lwip/core/init.c **** #endif /* LWIP_SOCKET */
 249:./src/lwip/core/init.c ****   ip_init();
 250:./src/lwip/core/init.c **** #if LWIP_ARP
 251:./src/lwip/core/init.c ****   etharp_init();
 252:./src/lwip/core/init.c **** #endif /* LWIP_ARP */
 253:./src/lwip/core/init.c **** #if LWIP_RAW
 254:./src/lwip/core/init.c ****   raw_init();
 255:./src/lwip/core/init.c **** #endif /* LWIP_RAW */
 256:./src/lwip/core/init.c **** #if LWIP_UDP
 257:./src/lwip/core/init.c ****   udp_init();
 258:./src/lwip/core/init.c **** #endif /* LWIP_UDP */
 259:./src/lwip/core/init.c **** #if LWIP_TCP
 260:./src/lwip/core/init.c ****   tcp_init();
 261:./src/lwip/core/init.c **** #endif /* LWIP_TCP */
 262:./src/lwip/core/init.c **** #if LWIP_SNMP
 263:./src/lwip/core/init.c ****   snmp_init();
 264:./src/lwip/core/init.c **** #endif /* LWIP_SNMP */
 265:./src/lwip/core/init.c **** #if LWIP_AUTOIP
 266:./src/lwip/core/init.c ****   autoip_init();
 267:./src/lwip/core/init.c **** #endif /* LWIP_AUTOIP */
 268:./src/lwip/core/init.c **** #if LWIP_IGMP
 269:./src/lwip/core/init.c ****   igmp_init();
 270:./src/lwip/core/init.c **** #endif /* LWIP_IGMP */
 271:./src/lwip/core/init.c **** #if LWIP_DNS
 272:./src/lwip/core/init.c ****   dns_init();
 273:./src/lwip/core/init.c **** #endif /* LWIP_DNS */
 274:./src/lwip/core/init.c **** }
  42              		.loc 1 274 0
  43 0018 04D04BE2 		sub	sp, fp, #4
  44 001c 0048BDE8 		ldmfd	sp!, {fp, lr}
  45 0020 1EFF2FE1 		bx	lr
  46              	.LFE0:
  87              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 init.c
     /tmp/ccWml87R.s:20     .text:00000000 $a
     /tmp/ccWml87R.s:23     .text:00000000 lwip_init
     /tmp/ccWml87R.s:61     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
mem_init
memp_init
lwip_socket_init
