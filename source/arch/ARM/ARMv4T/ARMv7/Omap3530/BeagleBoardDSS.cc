/*
 * BeagleBoardDSS.cc
 *
 *  Created on: 07.08.2012
 *      Author: danielb
 */

#include "BeagleBoardDSS.hh"
#include "types.hh"
#include "kernel/Kernel.hh"
#include "inc/memtools.hh"

extern Kernel* theOS;

#define config 2

struct disp_setting {
    unint2 width;
    unint2 height;
    unint4 freq;
    unint2 hfp;  // -1 programmed
    unint2 hbp;  // -1 programmed
    unint2 hsw;  // -1 programmed
    unint2 vfp;
    unint2 vbp;
    unint2 vsw;  // -1 programmed
    unint1 vsync;
};

//{1024,768,65000,24,160,136,3,29,6,1},
struct disp_setting disp_settings[4] = {
        { 640, 480, 25170, 16, 48, 96, 11, 31, 2, 1 },
        { 1280, 720, 72426, 190, 120, 32, 13, 3, 5, 0 },
        { 1024, 768, 96000, 24, 160, 136, 3, 29, 6, 1 },
        { 640, 480, 19200, 1, 28, 2, 1, 1, 1, 1 } };

#define SCREEN_WIDTH 1024
#define SCREEN_HEIGHT 768

#define FRAMEBUFFER_SIZE SCREEN_WIDTH * SCREEN_HEIGHT * 1 * 2

// only support for 640*480 at the moment
//static unsigned int screen_width = 1280;
//static unsigned int screen_hieght = 720;

//char screen[SCREEN_WIDTH * SCREEN_HEIGHT * 3*2] __attribute__((aligned(4)));

char* screen;

int x_cursor = 0;
int y_cursor = 0;

//#define udelay(s) for (int tzga = 0 ; tzga < s*6000; tzga++) {screen[tzga % 1280] = tzga;};

#define FONT_TINYTYPE

#ifdef FONT_THIN
unsigned char font[2048] =
{
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 000 (.)
    0x7E, 0x81, 0xA5, 0x81, 0xBD, 0x99, 0x81, 0x7E,// Char 001 (.)
    0x7E, 0xFF, 0xDB, 0xFF, 0xC3, 0xE7, 0xFF, 0x7E,// Char 002 (.)
    0x6C, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00,// Char 003 (.)
    0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00,// Char 004 (.)
    0x38, 0x38, 0x38, 0xFE, 0xFE, 0xD6, 0x10, 0x38,// Char 005 (.)
    0x10, 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x10, 0x38,// Char 006 (.)
    0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00,// Char 007 (.)
    0xFF, 0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF,// Char 008 (.)
    0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00,// Char 009 (.)
    0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF,// Char 010 (.)
    0x0F, 0x03, 0x05, 0x7D, 0x84, 0x84, 0x84, 0x78,// Char 011 (.)
    0x3C, 0x42, 0x42, 0x42, 0x3C, 0x18, 0x7E, 0x18,// Char 012 (.)
    0x3F, 0x21, 0x3F, 0x20, 0x20, 0x60, 0xE0, 0xC0,// Char 013 (.)
    0x3F, 0x21, 0x3F, 0x21, 0x23, 0x67, 0xE6, 0xC0,// Char 014 (.)
    0x18, 0xDB, 0x3C, 0xE7, 0xE7, 0x3C, 0xDB, 0x18,// Char 015 (.)
    0x80, 0xE0, 0xF8, 0xFE, 0xF8, 0xE0, 0x80, 0x00,// Char 016 (.)
    0x02, 0x0E, 0x3E, 0xFE, 0x3E, 0x0E, 0x02, 0x00,// Char 017 (.)
    0x18, 0x3C, 0x7E, 0x18, 0x18, 0x7E, 0x3C, 0x18,// Char 018 (.)
    0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x24, 0x00,// Char 019 (.)
    0x7F, 0x92, 0x92, 0x72, 0x12, 0x12, 0x12, 0x00,// Char 020 (.)
    0x3E, 0x63, 0x38, 0x44, 0x44, 0x38, 0xCC, 0x78,// Char 021 (.)
    0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x00,// Char 022 (.)
    0x18, 0x3C, 0x7E, 0x18, 0x7E, 0x3C, 0x18, 0xFF,// Char 023 (.)
    0x10, 0x38, 0x7C, 0x54, 0x10, 0x10, 0x10, 0x00,// Char 024 (.)
    0x10, 0x10, 0x10, 0x54, 0x7C, 0x38, 0x10, 0x00,// Char 025 (.)
    0x00, 0x18, 0x0C, 0xFE, 0x0C, 0x18, 0x00, 0x00,// Char 026 (.)
    0x00, 0x30, 0x60, 0xFE, 0x60, 0x30, 0x00, 0x00,// Char 027 (.)
    0x00, 0x00, 0x40, 0x40, 0x40, 0x7E, 0x00, 0x00,// Char 028 (.)
    0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x00,// Char 029 (.)
    0x00, 0x10, 0x38, 0x7C, 0xFE, 0xFE, 0x00, 0x00,// Char 030 (.)
    0x00, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00,// Char 031 (.)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 032 ( )
    0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x10, 0x00,// Char 033 (!)
    0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 034 (")
    0x24, 0x24, 0x7E, 0x24, 0x7E, 0x24, 0x24, 0x00,// Char 035 (#)
    0x18, 0x3E, 0x40, 0x3C, 0x02, 0x7C, 0x18, 0x00,// Char 036 ($)
    0x00, 0x62, 0x64, 0x08, 0x10, 0x26, 0x46, 0x00,// Char 037 (%)
    0x30, 0x48, 0x30, 0x56, 0x88, 0x88, 0x76, 0x00,// Char 038 (&)
    0x10, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 039 (')
    0x10, 0x20, 0x40, 0x40, 0x40, 0x20, 0x10, 0x00,// Char 040 (()
    0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00,// Char 041 ())
    0x00, 0x44, 0x38, 0xFE, 0x38, 0x44, 0x00, 0x00,// Char 042 (*)
    0x00, 0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x00,// Char 043 (+)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x20,// Char 044 (,)
    0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00,// Char 045 (-)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00,// Char 046 (.)
    0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x00,// Char 047 (/)
    0x3C, 0x42, 0x46, 0x4A, 0x52, 0x62, 0x3C, 0x00,// Char 048 (0)
    0x10, 0x30, 0x50, 0x10, 0x10, 0x10, 0x7C, 0x00,// Char 049 (1)
    0x3C, 0x42, 0x02, 0x0C, 0x30, 0x42, 0x7E, 0x00,// Char 050 (2)
    0x3C, 0x42, 0x02, 0x1C, 0x02, 0x42, 0x3C, 0x00,// Char 051 (3)
    0x08, 0x18, 0x28, 0x48, 0xFE, 0x08, 0x1C, 0x00,// Char 052 (4)
    0x7E, 0x40, 0x7C, 0x02, 0x02, 0x42, 0x3C, 0x00,// Char 053 (5)
    0x1C, 0x20, 0x40, 0x7C, 0x42, 0x42, 0x3C, 0x00,// Char 054 (6)
    0x7E, 0x42, 0x04, 0x08, 0x10, 0x10, 0x10, 0x00,// Char 055 (7)
    0x3C, 0x42, 0x42, 0x3C, 0x42, 0x42, 0x3C, 0x00,// Char 056 (8)
    0x3C, 0x42, 0x42, 0x3E, 0x02, 0x04, 0x38, 0x00,// Char 057 (9)
    0x00, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x00,// Char 058 (:)
    0x00, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x20,// Char 059 (;)
    0x08, 0x10, 0x20, 0x40, 0x20, 0x10, 0x08, 0x00,// Char 060 (<)
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00,// Char 061 (=)
    0x10, 0x08, 0x04, 0x02, 0x04, 0x08, 0x10, 0x00,// Char 062 (>)
    0x3C, 0x42, 0x02, 0x04, 0x08, 0x00, 0x08, 0x00,// Char 063 (?)
    0x3C, 0x42, 0x5E, 0x52, 0x5E, 0x40, 0x3C, 0x00,// Char 064 (@)
    0x18, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x00,// Char 065 (A)
    0x7C, 0x22, 0x22, 0x3C, 0x22, 0x22, 0x7C, 0x00,// Char 066 (B)
    0x1C, 0x22, 0x40, 0x40, 0x40, 0x22, 0x1C, 0x00,// Char 067 (C)
    0x78, 0x24, 0x22, 0x22, 0x22, 0x24, 0x78, 0x00,// Char 068 (D)
    0x7E, 0x22, 0x28, 0x38, 0x28, 0x22, 0x7E, 0x00,// Char 069 (E)
    0x7E, 0x22, 0x28, 0x38, 0x28, 0x20, 0x70, 0x00,// Char 070 (F)
    0x1C, 0x22, 0x40, 0x40, 0x4E, 0x22, 0x1E, 0x00,// Char 071 (G)
    0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x00,// Char 072 (H)
    0x38, 0x10, 0x10, 0x10, 0x10, 0x10, 0x38, 0x00,// Char 073 (I)
    0x0E, 0x04, 0x04, 0x04, 0x44, 0x44, 0x38, 0x00,// Char 074 (J)
    0x62, 0x24, 0x28, 0x30, 0x28, 0x24, 0x63, 0x00,// Char 075 (K)
    0x70, 0x20, 0x20, 0x20, 0x20, 0x22, 0x7E, 0x00,// Char 076 (L)
    0x63, 0x55, 0x49, 0x41, 0x41, 0x41, 0x41, 0x00,// Char 077 (M)
    0x62, 0x52, 0x4A, 0x46, 0x42, 0x42, 0x42, 0x00,// Char 078 (N)
    0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 079 (O)
    0x7C, 0x22, 0x22, 0x3C, 0x20, 0x20, 0x70, 0x00,// Char 080 (P)
    0x3C, 0x42, 0x42, 0x42, 0x4A, 0x3C, 0x03, 0x00,// Char 081 (Q)
    0x7C, 0x22, 0x22, 0x3C, 0x28, 0x24, 0x72, 0x00,// Char 082 (R)
    0x3C, 0x42, 0x40, 0x3C, 0x02, 0x42, 0x3C, 0x00,// Char 083 (S)
    0x7F, 0x49, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00,// Char 084 (T)
    0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 085 (U)
    0x41, 0x41, 0x41, 0x41, 0x22, 0x14, 0x08, 0x00,// Char 086 (V)
    0x41, 0x41, 0x41, 0x49, 0x49, 0x49, 0x36, 0x00,// Char 087 (W)
    0x41, 0x22, 0x14, 0x08, 0x14, 0x22, 0x41, 0x00,// Char 088 (X)
    0x41, 0x22, 0x14, 0x08, 0x08, 0x08, 0x1C, 0x00,// Char 089 (Y)
    0x7F, 0x42, 0x04, 0x08, 0x10, 0x21, 0x7F, 0x00,// Char 090 (Z)
    0x78, 0x40, 0x40, 0x40, 0x40, 0x40, 0x78, 0x00,// Char 091 ([)
    0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00,// Char 092 (\)
    0x78, 0x08, 0x08, 0x08, 0x08, 0x08, 0x78, 0x00,// Char 093 (])
    0x10, 0x28, 0x44, 0x82, 0x00, 0x00, 0x00, 0x00,// Char 094 (^)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,// Char 095 (_)
    0x10, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 096 (`)
    0x00, 0x00, 0x3C, 0x02, 0x3E, 0x42, 0x3F, 0x00,// Char 097 (a)
    0x60, 0x20, 0x20, 0x2E, 0x31, 0x31, 0x2E, 0x00,// Char 098 (b)
    0x00, 0x00, 0x3C, 0x42, 0x40, 0x42, 0x3C, 0x00,// Char 099 (c)
    0x06, 0x02, 0x02, 0x3A, 0x46, 0x46, 0x3B, 0x00,// Char 100 (d)
    0x00, 0x00, 0x3C, 0x42, 0x7E, 0x40, 0x3C, 0x00,// Char 101 (e)
    0x0C, 0x12, 0x10, 0x38, 0x10, 0x10, 0x38, 0x00,// Char 102 (f)
    0x00, 0x00, 0x3D, 0x42, 0x42, 0x3E, 0x02, 0x7C,// Char 103 (g)
    0x60, 0x20, 0x2C, 0x32, 0x22, 0x22, 0x62, 0x00,// Char 104 (h)
    0x10, 0x00, 0x30, 0x10, 0x10, 0x10, 0x38, 0x00,// Char 105 (i)
    0x02, 0x00, 0x06, 0x02, 0x02, 0x42, 0x42, 0x3C,// Char 106 (j)
    0x60, 0x20, 0x24, 0x28, 0x30, 0x28, 0x26, 0x00,// Char 107 (k)
    0x30, 0x10, 0x10, 0x10, 0x10, 0x10, 0x38, 0x00,// Char 108 (l)
    0x00, 0x00, 0x76, 0x49, 0x49, 0x49, 0x49, 0x00,// Char 109 (m)
    0x00, 0x00, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x00,// Char 110 (n)
    0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 111 (o)
    0x00, 0x00, 0x6C, 0x32, 0x32, 0x2C, 0x20, 0x70,// Char 112 (p)
    0x00, 0x00, 0x36, 0x4C, 0x4C, 0x34, 0x04, 0x0E,// Char 113 (q)
    0x00, 0x00, 0x6C, 0x32, 0x22, 0x20, 0x70, 0x00,// Char 114 (r)
    0x00, 0x00, 0x3E, 0x40, 0x3C, 0x02, 0x7C, 0x00,// Char 115 (s)
    0x10, 0x10, 0x7C, 0x10, 0x10, 0x12, 0x0C, 0x00,// Char 116 (t)
    0x00, 0x00, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x00,// Char 117 (u)
    0x00, 0x00, 0x41, 0x41, 0x22, 0x14, 0x08, 0x00,// Char 118 (v)
    0x00, 0x00, 0x41, 0x49, 0x49, 0x49, 0x36, 0x00,// Char 119 (w)
    0x00, 0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00,// Char 120 (x)
    0x00, 0x00, 0x42, 0x42, 0x42, 0x3E, 0x02, 0x7C,// Char 121 (y)
    0x00, 0x00, 0x7C, 0x08, 0x10, 0x20, 0x7C, 0x00,// Char 122 (z)
    0x0C, 0x10, 0x10, 0x60, 0x10, 0x10, 0x0C, 0x00,// Char 123 ({)
    0x10, 0x10, 0x10, 0x00, 0x10, 0x10, 0x10, 0x00,// Char 124 (|)
    0x30, 0x08, 0x08, 0x06, 0x08, 0x08, 0x30, 0x00,// Char 125 (})
    0x32, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 126 (~)
    0x00, 0x08, 0x14, 0x22, 0x41, 0x41, 0x7F, 0x00,// Char 127 (.)
    0x3C, 0x42, 0x40, 0x42, 0x3C, 0x0C, 0x02, 0x3C,// Char 128 (.)
    0x00, 0x44, 0x00, 0x44, 0x44, 0x44, 0x3E, 0x00,// Char 129 (.)
    0x0C, 0x00, 0x3C, 0x42, 0x7E, 0x40, 0x3C, 0x00,// Char 130 (.)
    0x3C, 0x42, 0x38, 0x04, 0x3C, 0x44, 0x3E, 0x00,// Char 131 (.)
    0x42, 0x00, 0x38, 0x04, 0x3C, 0x44, 0x3E, 0x00,// Char 132 (.)
    0x30, 0x00, 0x38, 0x04, 0x3C, 0x44, 0x3E, 0x00,// Char 133 (.)
    0x10, 0x00, 0x38, 0x04, 0x3C, 0x44, 0x3E, 0x00,// Char 134 (.)
    0x00, 0x00, 0x3C, 0x40, 0x40, 0x3C, 0x06, 0x1C,// Char 135 (.)
    0x3C, 0x42, 0x3C, 0x42, 0x7E, 0x40, 0x3C, 0x00,// Char 136 (.)
    0x42, 0x00, 0x3C, 0x42, 0x7E, 0x40, 0x3C, 0x00,// Char 137 (.)
    0x30, 0x00, 0x3C, 0x42, 0x7E, 0x40, 0x3C, 0x00,// Char 138 (.)
    0x24, 0x00, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00,// Char 139 (.)
    0x7C, 0x82, 0x30, 0x10, 0x10, 0x10, 0x38, 0x00,// Char 140 (.)
    0x30, 0x00, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00,// Char 141 (.)
    0x42, 0x18, 0x24, 0x42, 0x7E, 0x42, 0x42, 0x00,// Char 142 (.)
    0x18, 0x18, 0x00, 0x3C, 0x42, 0x7E, 0x42, 0x00,// Char 143 (.)
    0x0C, 0x00, 0x7C, 0x20, 0x38, 0x20, 0x7C, 0x00,// Char 144 (.)
    0x00, 0x00, 0x33, 0x0C, 0x3F, 0x44, 0x3B, 0x00,// Char 145 (.)
    0x1F, 0x24, 0x44, 0x7F, 0x44, 0x44, 0x47, 0x00,// Char 146 (.)
    0x18, 0x24, 0x00, 0x3C, 0x42, 0x42, 0x3C, 0x00,// Char 147 (.)
    0x00, 0x42, 0x00, 0x3C, 0x42, 0x42, 0x3C, 0x00,// Char 148 (.)
    0x20, 0x10, 0x00, 0x3C, 0x42, 0x42, 0x3C, 0x00,// Char 149 (.)
    0x18, 0x24, 0x00, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 150 (.)
    0x20, 0x10, 0x00, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 151 (.)
    0x00, 0x42, 0x00, 0x42, 0x42, 0x3E, 0x02, 0x3C,// Char 152 (.)
    0x42, 0x18, 0x24, 0x42, 0x42, 0x24, 0x18, 0x00,// Char 153 (.)
    0x42, 0x00, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 154 (.)
    0x08, 0x08, 0x3E, 0x40, 0x40, 0x3E, 0x08, 0x08,// Char 155 (.)
    0x18, 0x24, 0x20, 0x70, 0x20, 0x42, 0x7C, 0x00,// Char 156 (.)
    0x44, 0x28, 0x7C, 0x10, 0x7C, 0x10, 0x10, 0x00,// Char 157 (.)
    0xF8, 0x4C, 0x78, 0x44, 0x4F, 0x44, 0x45, 0xE6,// Char 158 (.)
    0x1C, 0x12, 0x10, 0x7C, 0x10, 0x10, 0x90, 0x60,// Char 159 (.)
    0x0C, 0x00, 0x38, 0x04, 0x3C, 0x44, 0x3E, 0x00,// Char 160 (.)
    0x0C, 0x00, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00,// Char 161 (.)
    0x04, 0x08, 0x00, 0x3C, 0x42, 0x42, 0x3C, 0x00,// Char 162 (.)
    0x00, 0x04, 0x08, 0x42, 0x42, 0x42, 0x3C, 0x00,// Char 163 (.)
    0x32, 0x4C, 0x00, 0x7C, 0x42, 0x42, 0x42, 0x00,// Char 164 (.)
    0x32, 0x4C, 0x00, 0x62, 0x52, 0x4A, 0x46, 0x00,// Char 165 (.)
    0x3C, 0x44, 0x44, 0x3E, 0x00, 0x7E, 0x00, 0x00,// Char 166 (.)
    0x38, 0x44, 0x44, 0x38, 0x00, 0x7C, 0x00, 0x00,// Char 167 (.)
    0x10, 0x00, 0x10, 0x20, 0x40, 0x42, 0x3C, 0x00,// Char 168 (.)
    0x00, 0x00, 0x00, 0x7E, 0x40, 0x40, 0x00, 0x00,// Char 169 (.)
    0x00, 0x00, 0x00, 0x7E, 0x02, 0x02, 0x00, 0x00,// Char 170 (.)
    0x42, 0xC4, 0x48, 0xF6, 0x29, 0x43, 0x8C, 0x1F,// Char 171 (.)
    0x42, 0xC4, 0x4A, 0xF6, 0x2A, 0x5F, 0x82, 0x02,// Char 172 (.)
    0x00, 0x10, 0x00, 0x10, 0x10, 0x10, 0x10, 0x00,// Char 173 (.)
    0x00, 0x12, 0x24, 0x48, 0x24, 0x12, 0x00, 0x00,// Char 174 (.)
    0x00, 0x48, 0x24, 0x12, 0x24, 0x48, 0x00, 0x00,// Char 175 (.)
    0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88,// Char 176 (.)
    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,// Char 177 (.)
    0xDB, 0x77, 0xDB, 0xEE, 0xDB, 0x77, 0xDB, 0xEE,// Char 178 (.)
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,// Char 179 (.)
    0x10, 0x10, 0x10, 0x10, 0xF0, 0x10, 0x10, 0x10,// Char 180 (.)
    0x10, 0x10, 0xF0, 0x10, 0xF0, 0x10, 0x10, 0x10,// Char 181 (.)
    0x14, 0x14, 0x14, 0x14, 0xF4, 0x14, 0x14, 0x14,// Char 182 (.)
    0x00, 0x00, 0x00, 0x00, 0xFC, 0x14, 0x14, 0x14,// Char 183 (.)
    0x00, 0x00, 0xF0, 0x10, 0xF0, 0x10, 0x10, 0x10,// Char 184 (.)
    0x14, 0x14, 0xF4, 0x04, 0xF4, 0x14, 0x14, 0x14,// Char 185 (.)
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,// Char 186 (.)
    0x00, 0x00, 0xFC, 0x04, 0xF4, 0x14, 0x14, 0x14,// Char 187 (.)
    0x14, 0x14, 0xF4, 0x04, 0xFC, 0x00, 0x00, 0x00,// Char 188 (.)
    0x14, 0x14, 0x14, 0x14, 0xFC, 0x00, 0x00, 0x00,// Char 189 (.)
    0x10, 0x10, 0xF0, 0x10, 0xF0, 0x00, 0x00, 0x00,// Char 190 (.)
    0x00, 0x00, 0x00, 0x00, 0xF0, 0x10, 0x10, 0x10,// Char 191 (.)
    0x10, 0x10, 0x10, 0x10, 0x1F, 0x00, 0x00, 0x00,// Char 192 (.)
    0x10, 0x10, 0x10, 0x10, 0xFF, 0x00, 0x00, 0x00,// Char 193 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x10, 0x10, 0x10,// Char 194 (.)
    0x10, 0x10, 0x10, 0x10, 0x1F, 0x10, 0x10, 0x10,// Char 195 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 196 (.)
    0x10, 0x10, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x10,// Char 197 (.)
    0x10, 0x10, 0x1F, 0x10, 0x1F, 0x10, 0x10, 0x10,// Char 198 (.)
    0x14, 0x14, 0x14, 0x14, 0x17, 0x14, 0x14, 0x14,// Char 199 (.)
    0x14, 0x14, 0x17, 0x10, 0x1F, 0x00, 0x00, 0x00,// Char 200 (.)
    0x00, 0x00, 0x1F, 0x10, 0x17, 0x14, 0x14, 0x14,// Char 201 (.)
    0x14, 0x14, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 202 (.)
    0x00, 0x00, 0xFF, 0x00, 0xF7, 0x14, 0x14, 0x14,// Char 203 (.)
    0x14, 0x14, 0x17, 0x10, 0x17, 0x14, 0x14, 0x14,// Char 204 (.)
    0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 205 (.)
    0x14, 0x14, 0xF7, 0x00, 0xF7, 0x14, 0x14, 0x14,// Char 206 (.)
    0x10, 0x10, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 207 (.)
    0x14, 0x14, 0x14, 0x14, 0xFF, 0x00, 0x00, 0x00,// Char 208 (.)
    0x00, 0x00, 0xFF, 0x00, 0xFF, 0x10, 0x10, 0x10,// Char 209 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x14, 0x14, 0x14,// Char 210 (.)
    0x14, 0x14, 0x14, 0x14, 0x1F, 0x00, 0x00, 0x00,// Char 211 (.)
    0x10, 0x10, 0x1F, 0x10, 0x1F, 0x00, 0x00, 0x00,// Char 212 (.)
    0x00, 0x00, 0x1F, 0x10, 0x1F, 0x10, 0x10, 0x10,// Char 213 (.)
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x14, 0x14, 0x14,// Char 214 (.)
    0x14, 0x14, 0x14, 0x14, 0xFF, 0x14, 0x14, 0x14,// Char 215 (.)
    0x10, 0x10, 0xFF, 0x10, 0xFF, 0x10, 0x10, 0x10,// Char 216 (.)
    0x10, 0x10, 0x10, 0x10, 0xF0, 0x00, 0x00, 0x00,// Char 217 (.)
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x10, 0x10, 0x10,// Char 218 (.)
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,// Char 219 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,// Char 220 (.)
    0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,// Char 221 (.)
    0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,// Char 222 (.)
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,// Char 223 (.)
    0x00, 0x00, 0x31, 0x4A, 0x44, 0x4A, 0x31, 0x00,// Char 224 (.)
    0x00, 0x3C, 0x42, 0x7C, 0x42, 0x7C, 0x40, 0x40,// Char 225 (.)
    0x00, 0x7E, 0x42, 0x40, 0x40, 0x40, 0x40, 0x00,// Char 226 (.)
    0x00, 0x3F, 0x54, 0x14, 0x14, 0x14, 0x14, 0x00,// Char 227 (.)
    0x7E, 0x42, 0x20, 0x18, 0x20, 0x42, 0x7E, 0x00,// Char 228 (.)
    0x00, 0x00, 0x3E, 0x48, 0x48, 0x48, 0x30, 0x00,// Char 229 (.)
    0x00, 0x44, 0x44, 0x44, 0x7A, 0x40, 0x40, 0x80,// Char 230 (.)
    0x00, 0x33, 0x4C, 0x08, 0x08, 0x08, 0x08, 0x00,// Char 231 (.)
    0x7C, 0x10, 0x38, 0x44, 0x44, 0x38, 0x10, 0x7C,// Char 232 (.)
    0x18, 0x24, 0x42, 0x7E, 0x42, 0x24, 0x18, 0x00,// Char 233 (.)
    0x18, 0x24, 0x42, 0x42, 0x24, 0x24, 0x66, 0x00,// Char 234 (.)
    0x1C, 0x20, 0x18, 0x3C, 0x42, 0x42, 0x3C, 0x00,// Char 235 (.)
    0x00, 0x62, 0x95, 0x89, 0x95, 0x62, 0x00, 0x00,// Char 236 (.)
    0x02, 0x04, 0x3C, 0x4A, 0x52, 0x3C, 0x40, 0x80,// Char 237 (.)
    0x0C, 0x10, 0x20, 0x3C, 0x20, 0x10, 0x0C, 0x00,// Char 238 (.)
    0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00,// Char 239 (.)
    0x00, 0x7E, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00,// Char 240 (.)
    0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x7C, 0x00,// Char 241 (.)
    0x10, 0x08, 0x04, 0x08, 0x10, 0x00, 0x7E, 0x00,// Char 242 (.)
    0x08, 0x10, 0x20, 0x10, 0x08, 0x00, 0x7E, 0x00,// Char 243 (.)
    0x0C, 0x12, 0x12, 0x10, 0x10, 0x10, 0x10, 0x10,// Char 244 (.)
    0x10, 0x10, 0x10, 0x10, 0x10, 0x90, 0x90, 0x60,// Char 245 (.)
    0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18, 0x00,// Char 246 (.)
    0x00, 0x32, 0x4C, 0x00, 0x32, 0x4C, 0x00, 0x00,// Char 247 (.)
    0x30, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00,// Char 248 (.)
    0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,// Char 249 (.)
    0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,// Char 250 (.)
    0x0F, 0x08, 0x08, 0x08, 0x08, 0xC8, 0x28, 0x18,// Char 251 (.)
    0x78, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00,// Char 252 (.)
    0x30, 0x48, 0x10, 0x20, 0x78, 0x00, 0x00, 0x00,// Char 253 (.)
    0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00,// Char 254 (.)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00// Char 255 (.)
};

#endif
#ifdef FONT_TINYTYPE
unsigned char font[2048] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 000 (.)
        0x7E, 0x81, 0xA5, 0x81, 0xA5, 0x99, 0x81, 0x7E,  // Char 001 (.)
        0x3C, 0x7E, 0xDB, 0xFF, 0xC3, 0x7E, 0x3C, 0x00,  // Char 002 (.)
        0x00, 0x6C, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00,  // Char 003 (.)
        0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00,  // Char 004 (.)
        0x00, 0x3C, 0x18, 0xFF, 0xFF, 0x08, 0x18, 0x00,  // Char 005 (.)
        0x10, 0x38, 0x7C, 0xFE, 0xFE, 0x10, 0x38, 0x00,  // Char 006 (.)
        0x00, 0x00, 0x18, 0x3C, 0x18, 0x00, 0x00, 0x00,  // Char 007 (.)
        0xFF, 0xFF, 0xE7, 0xC3, 0xE7, 0xFF, 0xFF, 0xFF,  // Char 008 (.)
        0x00, 0x3C, 0x42, 0x81, 0x81, 0x42, 0x3C, 0x00,  // Char 009 (.)
        0xFF, 0xC3, 0xBD, 0x7E, 0x7E, 0xBD, 0xC3, 0xFF,  // Char 010 (.)
        0x1F, 0x07, 0x0D, 0x7C, 0xC6, 0xC6, 0x7C, 0x00,  // Char 011 (.)
        0x00, 0x7E, 0xC3, 0xC3, 0x7E, 0x18, 0x7E, 0x18,  // Char 012 (.)
        0x04, 0x06, 0x07, 0x04, 0x04, 0xFC, 0xF8, 0x00,  // Char 013 (.)
        0x0C, 0x0A, 0x0D, 0x0B, 0xF9, 0xF9, 0x1F, 0x1F,  // Char 014 (.)
        0x00, 0x92, 0x7C, 0x6C, 0xC6, 0x6C, 0x7C, 0x92,  // Char 015 (.)
        0x00, 0x00, 0x60, 0x78, 0x7E, 0x78, 0x60, 0x00,  // Char 016 (.)
        0x00, 0x00, 0x06, 0x1E, 0x7E, 0x1E, 0x06, 0x00,  // Char 017 (.)
        0x18, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x18,  // Char 018 (.)
        0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x24, 0x00,  // Char 019 (.)
        0xFF, 0xB6, 0x76, 0x36, 0x36, 0x36, 0x36, 0x00,  // Char 020 (.)
        0x7E, 0xC1, 0xDC, 0x22, 0x22, 0x1F, 0x83, 0x7E,  // Char 021 (.)
        0x00, 0x00, 0x00, 0x7E, 0x7E, 0x00, 0x00, 0x00,  // Char 022 (.)
        0x18, 0x7E, 0x18, 0x18, 0x7E, 0x18, 0x00, 0xFF,  // Char 023 (.)
        0x08, 0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00,  // Char 024 (.)
        0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x08, 0x00,  // Char 025 (.)
        0x00, 0x00, 0x02, 0xFF, 0x02, 0x00, 0x00, 0x00,  // Char 026 (.)
        0x00, 0x00, 0x40, 0xFF, 0x40, 0x00, 0x00, 0x00,  // Char 027 (.)
        0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xFF, 0x00,  // Char 028 (.)
        0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x00,  // Char 029 (.)
        0x00, 0x00, 0x10, 0x38, 0x7C, 0xFE, 0x00, 0x00,  // Char 030 (.)
        0x00, 0x00, 0x00, 0xFE, 0x7C, 0x38, 0x10, 0x00,  // Char 031 (.)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 032 ( )
        0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x10, 0x00,  // Char 033 (!)
        0x44, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 034 (")
        0x28, 0x28, 0xFE, 0x28, 0xFE, 0x28, 0x28, 0x00,  // Char 035 (#)
        0x28, 0x7C, 0xA8, 0x7C, 0x2A, 0x7C, 0x28, 0x00,  // Char 036 ($)
        0x60, 0x94, 0x68, 0x10, 0x2C, 0x52, 0x8C, 0x00,  // Char 037 (%)
        0x30, 0x48, 0x30, 0x48, 0x86, 0x84, 0x78, 0x00,  // Char 038 (&)
        0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 039 (')
        0x10, 0x20, 0x40, 0x40, 0x40, 0x20, 0x10, 0x00,  // Char 040 (()
        0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00,  // Char 041 ())
        0x00, 0x54, 0x38, 0x7C, 0x38, 0x54, 0x00, 0x00,  // Char 042 (*)
        0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00,  // Char 043 (+)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10,  // Char 044 (,)
        0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00,  // Char 045 (-)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,  // Char 046 (.)
        0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00,  // Char 047 (/)
        0x00, 0x18, 0x24, 0x2C, 0x34, 0x24, 0x18, 0x00,  // Char 048 (0)
        0x00, 0x10, 0x30, 0x10, 0x10, 0x10, 0x38, 0x00,  // Char 049 (1)
        0x00, 0x18, 0x24, 0x04, 0x18, 0x20, 0x3C, 0x00,  // Char 050 (2)
        0x00, 0x38, 0x04, 0x18, 0x04, 0x04, 0x38, 0x00,  // Char 051 (3)
        0x00, 0x20, 0x28, 0x28, 0x3C, 0x08, 0x08, 0x00,  // Char 052 (4)
        0x00, 0x3C, 0x20, 0x38, 0x04, 0x04, 0x38, 0x00,  // Char 053 (5)
        0x00, 0x1C, 0x20, 0x38, 0x24, 0x24, 0x18, 0x00,  // Char 054 (6)
        0x00, 0x3C, 0x04, 0x08, 0x10, 0x10, 0x10, 0x00,  // Char 055 (7)
        0x00, 0x18, 0x24, 0x18, 0x24, 0x24, 0x18, 0x00,  // Char 056 (8)
        0x00, 0x18, 0x24, 0x24, 0x1C, 0x04, 0x38, 0x00,  // Char 057 (9)
        0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,  // Char 058 (:)
        0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x20, 0x00,  // Char 059 (;)
        0x00, 0x08, 0x10, 0x20, 0x10, 0x08, 0x00, 0x00,  // Char 060 (<)
        0x00, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00,  // Char 061 (=)
        0x00, 0x20, 0x10, 0x08, 0x10, 0x20, 0x00, 0x00,  // Char 062 (>)
        0x7C, 0x82, 0x04, 0x08, 0x10, 0x00, 0x10, 0x00,  // Char 063 (?)
        0x7C, 0x82, 0x9A, 0xAA, 0xAA, 0x9E, 0x7C, 0x00,  // Char 064 (@)
        0x00, 0x18, 0x24, 0x24, 0x3C, 0x24, 0x24, 0x00,  // Char 065 (A)
        0x00, 0x38, 0x24, 0x38, 0x24, 0x24, 0x38, 0x00,  // Char 066 (B)
        0x00, 0x18, 0x24, 0x20, 0x20, 0x24, 0x18, 0x00,  // Char 067 (C)
        0x00, 0x38, 0x24, 0x24, 0x24, 0x24, 0x38, 0x00,  // Char 068 (D)
        0x00, 0x3C, 0x20, 0x38, 0x20, 0x20, 0x3C, 0x00,  // Char 069 (E)
        0x00, 0x3C, 0x20, 0x38, 0x20, 0x20, 0x20, 0x00,  // Char 070 (F)
        0x00, 0x18, 0x24, 0x20, 0x2C, 0x24, 0x18, 0x00,  // Char 071 (G)
        0x00, 0x24, 0x24, 0x3C, 0x24, 0x24, 0x24, 0x00,  // Char 072 (H)
        0x00, 0x38, 0x10, 0x10, 0x10, 0x10, 0x38, 0x00,  // Char 073 (I)
        0x00, 0x04, 0x04, 0x04, 0x04, 0x24, 0x18, 0x00,  // Char 074 (J)
        0x00, 0x28, 0x28, 0x30, 0x28, 0x24, 0x24, 0x00,  // Char 075 (K)
        0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x00,  // Char 076 (L)
        0x00, 0x44, 0x6C, 0x54, 0x44, 0x44, 0x44, 0x00,  // Char 077 (M)
        0x00, 0x24, 0x34, 0x34, 0x2C, 0x2C, 0x24, 0x00,  // Char 078 (N)
        0x00, 0x18, 0x24, 0x24, 0x24, 0x24, 0x18, 0x00,  // Char 079 (O)
        0x00, 0x38, 0x24, 0x24, 0x38, 0x20, 0x20, 0x00,  // Char 080 (P)
        0x00, 0x18, 0x24, 0x24, 0x24, 0x24, 0x1C, 0x02,  // Char 081 (Q)
        0x00, 0x38, 0x24, 0x24, 0x38, 0x24, 0x24, 0x00,  // Char 082 (R)
        0x00, 0x1C, 0x20, 0x18, 0x04, 0x04, 0x38, 0x00,  // Char 083 (S)
        0x00, 0x38, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00,  // Char 084 (T)
        0x00, 0x24, 0x24, 0x24, 0x24, 0x24, 0x3C, 0x00,  // Char 085 (U)
        0x00, 0x24, 0x24, 0x24, 0x24, 0x14, 0x0C, 0x00,  // Char 086 (V)
        0x00, 0x44, 0x44, 0x44, 0x54, 0x6C, 0x44, 0x00,  // Char 087 (W)
        0x00, 0x24, 0x24, 0x10, 0x08, 0x24, 0x24, 0x00,  // Char 088 (X)
        0x00, 0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x00,  // Char 089 (Y)
        0x00, 0x3C, 0x04, 0x08, 0x10, 0x20, 0x3C, 0x00,  // Char 090 (Z)
        0x1C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1C, 0x00,  // Char 091 ([)
        0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00,  // Char 092 (\)
        0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00,  // Char 093 (])
        0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00,  // Char 094 (^)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,  // Char 095 (_)
        0x10, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 096 (`)
        0x00, 0x00, 0x18, 0x24, 0x3C, 0x24, 0x24, 0x00,  // Char 097 (a)
        0x00, 0x00, 0x38, 0x24, 0x38, 0x24, 0x38, 0x00,  // Char 098 (b)
        0x00, 0x00, 0x18, 0x24, 0x20, 0x24, 0x18, 0x00,  // Char 099 (c)
        0x00, 0x00, 0x38, 0x24, 0x24, 0x24, 0x38, 0x00,  // Char 100 (d)
        0x00, 0x00, 0x3C, 0x20, 0x38, 0x20, 0x3C, 0x00,  // Char 101 (e)
        0x00, 0x00, 0x3C, 0x20, 0x38, 0x20, 0x20, 0x00,  // Char 102 (f)
        0x00, 0x00, 0x1C, 0x20, 0x2C, 0x24, 0x18, 0x00,  // Char 103 (g)
        0x00, 0x00, 0x24, 0x24, 0x3C, 0x24, 0x24, 0x00,  // Char 104 (h)
        0x00, 0x00, 0x1C, 0x08, 0x08, 0x08, 0x1C, 0x00,  // Char 105 (i)
        0x00, 0x00, 0x04, 0x04, 0x04, 0x24, 0x18, 0x00,  // Char 106 (j)
        0x00, 0x00, 0x24, 0x28, 0x30, 0x28, 0x24, 0x00,  // Char 107 (k)
        0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x00,  // Char 108 (l)
        0x00, 0x00, 0x42, 0x66, 0x5A, 0x42, 0x42, 0x00,  // Char 109 (m)
        0x00, 0x00, 0x24, 0x34, 0x3C, 0x2C, 0x24, 0x00,  // Char 110 (n)
        0x00, 0x00, 0x18, 0x24, 0x24, 0x24, 0x18, 0x00,  // Char 111 (o)
        0x00, 0x00, 0x38, 0x24, 0x38, 0x20, 0x20, 0x00,  // Char 112 (p)
        0x00, 0x00, 0x18, 0x24, 0x24, 0x24, 0x1C, 0x02,  // Char 113 (q)
        0x00, 0x00, 0x38, 0x24, 0x38, 0x24, 0x24, 0x00,  // Char 114 (r)
        0x00, 0x00, 0x1C, 0x20, 0x18, 0x04, 0x38, 0x00,  // Char 115 (s)
        0x00, 0x00, 0x38, 0x10, 0x10, 0x10, 0x10, 0x00,  // Char 116 (t)
        0x00, 0x00, 0x24, 0x24, 0x24, 0x24, 0x3C, 0x00,  // Char 117 (u)
        0x00, 0x00, 0x24, 0x24, 0x24, 0x14, 0x0C, 0x00,  // Char 118 (v)
        0x00, 0x00, 0x42, 0x42, 0x5A, 0x66, 0x42, 0x00,  // Char 119 (w)
        0x00, 0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00,  // Char 120 (x)
        0x00, 0x00, 0x44, 0x28, 0x10, 0x10, 0x10, 0x00,  // Char 121 (y)
        0x00, 0x00, 0x7C, 0x08, 0x10, 0x20, 0x7C, 0x00,  // Char 122 (z)
        0x0E, 0x10, 0x10, 0x20, 0x10, 0x10, 0x0E, 0x00,  // Char 123 ({)
        0x08, 0x08, 0x08, 0x00, 0x08, 0x08, 0x08, 0x00,  // Char 124 (|)
        0xE0, 0x10, 0x10, 0x08, 0x10, 0x10, 0xE0, 0x00,  // Char 125 (})
        0x00, 0x00, 0x60, 0x92, 0x0C, 0x00, 0x00, 0x00,  // Char 126 (~)
        0x00, 0x00, 0x18, 0x24, 0x42, 0xFF, 0x00, 0x00,  // Char 127 (.)
        0x7C, 0x82, 0x80, 0x80, 0x82, 0x7C, 0x08, 0x30,  // Char 128 (.)
        0x48, 0x00, 0x84, 0x84, 0x84, 0x84, 0x7C, 0x00,  // Char 129 (.)
        0x0C, 0x10, 0x7C, 0x82, 0xFC, 0x80, 0x7C, 0x00,  // Char 130 (.)
        0x18, 0x24, 0x7C, 0x02, 0x7E, 0x82, 0x7C, 0x00,  // Char 131 (.)
        0x24, 0x00, 0x7C, 0x02, 0x7E, 0x82, 0x7C, 0x00,  // Char 132 (.)
        0x18, 0x04, 0x7C, 0x02, 0x7E, 0x82, 0x7C, 0x00,  // Char 133 (.)
        0x10, 0x00, 0x7C, 0x02, 0x7E, 0x82, 0x7C, 0x00,  // Char 134 (.)
        0x00, 0x00, 0x7C, 0x80, 0x80, 0x7C, 0x08, 0x30,  // Char 135 (.)
        0x18, 0x24, 0x7C, 0x82, 0xFC, 0x80, 0x7C, 0x00,  // Char 136 (.)
        0x24, 0x00, 0x7C, 0x82, 0xFC, 0x80, 0x7C, 0x00,  // Char 137 (.)
        0x30, 0x08, 0x7C, 0x82, 0xFC, 0x80, 0x7C, 0x00,  // Char 138 (.)
        0x24, 0x00, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00,  // Char 139 (.)
        0x18, 0x24, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00,  // Char 140 (.)
        0x18, 0x04, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00,  // Char 141 (.)
        0x24, 0x00, 0x38, 0x44, 0x7C, 0x44, 0x44, 0x00,  // Char 142 (.)
        0x18, 0x00, 0x38, 0x44, 0x7C, 0x44, 0x44, 0x00,  // Char 143 (.)
        0x0C, 0x10, 0xFE, 0x40, 0x78, 0x40, 0xFE, 0x00,  // Char 144 (.)
        0x00, 0x00, 0x7C, 0x1A, 0x7E, 0xD8, 0x7E, 0x00,  // Char 145 (.)
        0x7E, 0xD8, 0xD8, 0xDE, 0xF8, 0xD8, 0xDE, 0x00,  // Char 146 (.)
        0x18, 0x24, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,  // Char 147 (.)
        0x66, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,  // Char 148 (.)
        0x38, 0x0C, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,  // Char 149 (.)
        0x18, 0x24, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x00,  // Char 150 (.)
        0x38, 0x0C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x00,  // Char 151 (.)
        0x66, 0x00, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x7C,  // Char 152 (.)
        0x66, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,  // Char 153 (.)
        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,  // Char 154 (.)
        0x18, 0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x18, 0x00,  // Char 155 (.)
        0x1E, 0x32, 0x30, 0x78, 0x30, 0x70, 0xFE, 0x00,  // Char 156 (.)
        0x66, 0x3C, 0x18, 0x7E, 0x18, 0x3C, 0x18, 0x00,  // Char 157 (.)
        0xFC, 0xC6, 0xFC, 0xC0, 0xCC, 0xDE, 0xCC, 0x0E,  // Char 158 (.)
        0x00, 0x1C, 0x32, 0x30, 0xFC, 0x30, 0xF0, 0x00,  // Char 159 (.)
        0x0E, 0x18, 0x7C, 0x06, 0x7E, 0xC6, 0x7E, 0x00,  // Char 160 (.)
        0x1A, 0x30, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00,  // Char 161 (.)
        0x0E, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,  // Char 162 (.)
        0x0E, 0x18, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x00,  // Char 163 (.)
        0x66, 0x98, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6, 0x00,  // Char 164 (.)
        0x66, 0x98, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0x00,  // Char 165 (.)
        0x7C, 0x06, 0x7E, 0xC6, 0x7E, 0x00, 0xFE, 0x00,  // Char 166 (.)
        0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0xFE, 0x00,  // Char 167 (.)
        0x18, 0x00, 0x18, 0x30, 0x60, 0xC6, 0x7C, 0x00,  // Char 168 (.)
        0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0x00,  // Char 169 (.)
        0x00, 0x00, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x00,  // Char 170 (.)
        0x80, 0x80, 0x80, 0x9C, 0x02, 0x08, 0x1E, 0x00,  // Char 171 (.)
        0x80, 0x80, 0x80, 0x90, 0x14, 0x1E, 0x04, 0x00,  // Char 172 (.)
        0x10, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00,  // Char 173 (.)
        0x00, 0x22, 0x44, 0x88, 0x44, 0x22, 0x00, 0x00,  // Char 174 (.)
        0x00, 0x88, 0x44, 0x22, 0x44, 0x88, 0x00, 0x00,  // Char 175 (.)
        0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,  // Char 176 (.)
        0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55,  // Char 177 (.)
        0x44, 0x22, 0x44, 0x22, 0x44, 0x22, 0x44, 0x22,  // Char 178 (.)
        0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,  // Char 179 (.)
        0x08, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x08, 0x08,  // Char 180 (.)
        0x08, 0x08, 0x08, 0xF8, 0x08, 0xF8, 0x08, 0x08,  // Char 181 (.)
        0x14, 0x14, 0x14, 0xF4, 0x14, 0x14, 0x14, 0x14,  // Char 182 (.)
        0x00, 0x00, 0x00, 0xFC, 0x14, 0x14, 0x14, 0x14,  // Char 183 (.)
        0x00, 0x00, 0x00, 0xF8, 0x08, 0xF8, 0x08, 0x08,  // Char 184 (.)
        0x14, 0x14, 0x14, 0xF4, 0x04, 0xF4, 0x14, 0x14,  // Char 185 (.)
        0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,  // Char 186 (.)
        0x00, 0x00, 0x00, 0xFC, 0x04, 0xF4, 0x14, 0x14,  // Char 187 (.)
        0x14, 0x14, 0x14, 0xF4, 0x04, 0xFC, 0x00, 0x00,  // Char 188 (.)
        0x14, 0x14, 0x14, 0xFC, 0x00, 0x00, 0x00, 0x00,  // Char 189 (.)
        0x08, 0x08, 0x08, 0xF8, 0x08, 0xF8, 0x00, 0x00,  // Char 190 (.)
        0x00, 0x00, 0x00, 0xF8, 0x08, 0x08, 0x08, 0x08,  // Char 191 (.)
        0x08, 0x08, 0x08, 0x0F, 0x00, 0x00, 0x00, 0x00,  // Char 192 (.)
        0x08, 0x08, 0x08, 0xFF, 0x00, 0x00, 0x00, 0x00,  // Char 193 (.)
        0x00, 0x00, 0x00, 0xFF, 0x08, 0x08, 0x08, 0x08,  // Char 194 (.)
        0x08, 0x08, 0x08, 0x0F, 0x08, 0x08, 0x08, 0x08,  // Char 195 (.)
        0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,  // Char 196 (.)
        0x08, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x08, 0x08,  // Char 197 (.)
        0x08, 0x08, 0x08, 0x0F, 0x08, 0x0F, 0x08, 0x08,  // Char 198 (.)
        0x14, 0x14, 0x14, 0x17, 0x14, 0x14, 0x14, 0x14,  // Char 199 (.)
        0x14, 0x14, 0x14, 0x17, 0x10, 0x1F, 0x00, 0x00,  // Char 200 (.)
        0x00, 0x00, 0x00, 0x1F, 0x10, 0x17, 0x14, 0x14,  // Char 201 (.)
        0x14, 0x14, 0x14, 0xF7, 0x00, 0xFF, 0x00, 0x00,  // Char 202 (.)
        0x00, 0x00, 0x00, 0xFF, 0x00, 0xF7, 0x14, 0x14,  // Char 203 (.)
        0x14, 0x14, 0x14, 0x17, 0x10, 0x17, 0x14, 0x14,  // Char 204 (.)
        0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00,  // Char 205 (.)
        0x14, 0x14, 0x14, 0xF7, 0x00, 0xF7, 0x14, 0x14,  // Char 206 (.)
        0x08, 0x08, 0x08, 0xFF, 0x00, 0xFF, 0x00, 0x00,  // Char 207 (.)
        0x14, 0x14, 0x14, 0xFF, 0x00, 0x00, 0x00, 0x00,  // Char 208 (.)
        0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x08, 0x08,  // Char 209 (.)
        0x00, 0x00, 0x00, 0xFF, 0x14, 0x14, 0x14, 0x14,  // Char 210 (.)
        0x14, 0x14, 0x14, 0x1F, 0x00, 0x00, 0x00, 0x00,  // Char 211 (.)
        0x08, 0x08, 0x08, 0x0F, 0x08, 0x0F, 0x00, 0x00,  // Char 212 (.)
        0x00, 0x00, 0x00, 0x1F, 0x10, 0x1F, 0x10, 0x10,  // Char 213 (.)
        0x00, 0x00, 0x00, 0x1F, 0x14, 0x14, 0x14, 0x14,  // Char 214 (.)
        0x14, 0x14, 0x14, 0xFF, 0x14, 0x14, 0x14, 0x14,  // Char 215 (.)
        0x08, 0x08, 0x08, 0xFF, 0x08, 0xFF, 0x08, 0x08,  // Char 216 (.)
        0x08, 0x08, 0x08, 0xF8, 0x00, 0x00, 0x00, 0x00,  // Char 217 (.)
        0x00, 0x00, 0x00, 0x0F, 0x08, 0x08, 0x08, 0x08,  // Char 218 (.)
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // Char 219 (.)
        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,  // Char 220 (.)
        0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,  // Char 221 (.)
        0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,  // Char 222 (.)
        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,  // Char 223 (.)
        0x00, 0x00, 0x77, 0x98, 0x98, 0x77, 0x00, 0x00,  // Char 224 (.)
        0x1C, 0x36, 0x66, 0xFC, 0xC6, 0xC6, 0xFC, 0xC0,  // Char 225 (.)
        0xFE, 0x62, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00,  // Char 226 (.)
        0x00, 0x00, 0xFF, 0x66, 0x66, 0x66, 0x66, 0x00,  // Char 227 (.)
        0xFE, 0x62, 0x30, 0x18, 0x30, 0x62, 0xFE, 0x00,  // Char 228 (.)
        0x00, 0x00, 0x3F, 0x66, 0xC6, 0xCC, 0x78, 0x00,  // Char 229 (.)
        0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0xF0,  // Char 230 (.)
        0x00, 0x00, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x00,  // Char 231 (.)
        0x3C, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x3C,  // Char 232 (.)
        0x00, 0x7C, 0xC6, 0xFE, 0xC6, 0x7C, 0x00, 0x00,  // Char 233 (.)
        0x00, 0x7E, 0xC3, 0xC3, 0xC3, 0x66, 0xE7, 0x00,  // Char 234 (.)
        0x1E, 0x19, 0x3C, 0x66, 0xC6, 0xCC, 0x78, 0x00,  // Char 235 (.)
        0x00, 0x00, 0x66, 0x99, 0x99, 0x66, 0x00, 0x00,  // Char 236 (.)
        0x00, 0x03, 0x7C, 0xCE, 0xE6, 0x7C, 0xC0, 0x00,  // Char 237 (.)
        0x00, 0x3E, 0xC0, 0xFE, 0xC0, 0x3E, 0x00, 0x00,  // Char 238 (.)
        0x00, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0x00, 0x00,  // Char 239 (.)
        0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00,  // Char 240 (.)
        0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x3E, 0x00,  // Char 241 (.)
        0x30, 0x08, 0x04, 0x08, 0x30, 0x00, 0x7E, 0x00,  // Char 242 (.)
        0x18, 0x20, 0x40, 0x20, 0x18, 0x00, 0xFC, 0x00,  // Char 243 (.)
        0x00, 0x0E, 0x11, 0x10, 0x10, 0x10, 0x10, 0x10,  // Char 244 (.)
        0x10, 0x10, 0x10, 0x10, 0x10, 0x90, 0x60, 0x00,  // Char 245 (.)
        0x00, 0x08, 0x00, 0x3E, 0x00, 0x08, 0x00, 0x00,  // Char 246 (.)
        0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00,  // Char 247 (.)
        0x3C, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 248 (.)
        0x00, 0x18, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00,  // Char 249 (.)
        0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,  // Char 250 (.)
        0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x38, 0x00,  // Char 251 (.)
        0x50, 0x68, 0x48, 0x48, 0x00, 0x00, 0x00, 0x00,  // Char 252 (.)
        0xF0, 0x30, 0xC0, 0xF0, 0x00, 0x00, 0x00, 0x00,  // Char 253 (.)
        0x00, 0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00,  // Char 254 (.)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00    // Char 255 (.)
        };
#endif
#ifdef FONT_STANDARD
unsigned char font[2048] =
{
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Char 000 (.)
    0x7E, 0x81, 0xA5, 0x81, 0xBD, 0x99, 0x81, 0x7E,// Char 001 (.)
    0x7E, 0xFF, 0xDB, 0xFF, 0xC3, 0xE7, 0xFF, 0x7E,// Char 002 (.)
    0x6C, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00,// Char 003 (.)
    0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00,// Char 004 (.)
    0x3C, 0x3C, 0x18, 0xFF, 0xE7, 0x18, 0x3C, 0x00,// Char 005 (.)
    0x10, 0x38, 0x7C, 0xFE, 0xEE, 0x10, 0x38, 0x00,// Char 006 (.)
    0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00,// Char 007 (.)
    0xFF, 0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF,// Char 008 (.)
    0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00,// Char 009 (.)
    0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF,// Char 010 (.)
    0x0F, 0x07, 0x0F, 0x7D, 0xCC, 0xCC, 0xCC, 0x78,// Char 011 (.)
    0x3C, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x7E, 0x18,// Char 012 (.)
    0x08, 0x0C, 0x0A, 0x0A, 0x08, 0x78, 0xF0, 0x00,// Char 013 (.)
    0x18, 0x14, 0x1A, 0x16, 0x72, 0xE2, 0x0E, 0x1C,// Char 014 (.)
    0x10, 0x54, 0x38, 0xEE, 0x38, 0x54, 0x10, 0x00,// Char 015 (.)
    0x80, 0xE0, 0xF8, 0xFE, 0xF8, 0xE0, 0x80, 0x00,// Char 016 (.)
    0x02, 0x0E, 0x3E, 0xFE, 0x3E, 0x0E, 0x02, 0x00,// Char 017 (.)
    0x18, 0x3C, 0x5A, 0x18, 0x5A, 0x3C, 0x18, 0x00,// Char 018 (.)
    0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00,// Char 019 (.)
    0x7F, 0xDB, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x00,// Char 020 (.)
    0x1C, 0x22, 0x38, 0x44, 0x44, 0x38, 0x88, 0x70,// Char 021 (.)
    0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x00,// Char 022 (.)
    0x18, 0x3C, 0x5A, 0x18, 0x5A, 0x3C, 0x18, 0x7E,// Char 023 (.)
    0x18, 0x3C, 0x5A, 0x18, 0x18, 0x18, 0x18, 0x00,// Char 024 (.)
    0x18, 0x18, 0x18, 0x18, 0x5A, 0x3C, 0x18, 0x00,// Char 025 (.)
    0x00, 0x18, 0x0C, 0xFE, 0x0C, 0x18, 0x00, 0x00,// Char 026 (.)
    0x00, 0x30, 0x60, 0xFE, 0x60, 0x30, 0x00, 0x00,// Char 027 (.)
    0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xFE, 0x00, 0x00,// Char 028 (.)
    0x00, 0x24, 0x42, 0xFF, 0x42, 0x24, 0x00, 0x00,// Char 029 (.)
    0x00, 0x10, 0x38, 0x7C, 0xFE, 0xFE, 0x00, 0x00,// Char 030 (.)
    0x00, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00,// Char 031 (.)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 032 ( )
    0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00,// Char 033 (!)
    0x6C, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 034 (")
    0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C, 0x00,// Char 035 (#)
    0x10, 0x7C, 0xD0, 0x7C, 0x16, 0xFC, 0x10, 0x00,// Char 036 ($)
    0x00, 0x66, 0xAC, 0xD8, 0x36, 0x6A, 0xCC, 0x00,// Char 037 (%)
    0x38, 0x4C, 0x38, 0x78, 0xCE, 0xCC, 0x7A, 0x00,// Char 038 (&)
    0x30, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 039 (')
    0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00,// Char 040 (()
    0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00,// Char 041 ())
    0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00,// Char 042 (*)
    0x00, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x00, 0x00,// Char 043 (+)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x10, 0x20,// Char 044 (,)
    0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00,// Char 045 (-)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,// Char 046 (.)
    0x02, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x00,// Char 047 (/)
    0x7C, 0xCE, 0xDE, 0xF6, 0xE6, 0xE6, 0x7C, 0x00,// Char 048 (0)
    0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x7E, 0x00,// Char 049 (1)
    0x7C, 0xC6, 0x06, 0x1C, 0x70, 0xC6, 0xFE, 0x00,// Char 050 (2)
    0x7C, 0xC6, 0x06, 0x3C, 0x06, 0xC6, 0x7C, 0x00,// Char 051 (3)
    0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x1E, 0x00,// Char 052 (4)
    0xFE, 0xC0, 0xFC, 0x06, 0x06, 0xC6, 0x7C, 0x00,// Char 053 (5)
    0x7C, 0xC6, 0xC0, 0xFC, 0xC6, 0xC6, 0x7C, 0x00,// Char 054 (6)
    0xFE, 0xC6, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00,// Char 055 (7)
    0x7C, 0xC6, 0xC6, 0x7C, 0xC6, 0xC6, 0x7C, 0x00,// Char 056 (8)
    0x7C, 0xC6, 0xC6, 0x7E, 0x06, 0xC6, 0x7C, 0x00,// Char 057 (9)
    0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,// Char 058 (:)
    0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x10, 0x20,// Char 059 (;)
    0x0C, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0C, 0x00,// Char 060 (<)
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00,// Char 061 (=)
    0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60, 0x00,// Char 062 (>)
    0x78, 0xCC, 0x0C, 0x18, 0x30, 0x00, 0x30, 0x00,// Char 063 (?)
    0x7C, 0x82, 0x9E, 0xA6, 0x9E, 0x80, 0x7C, 0x00,// Char 064 (@)
    0x7C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0x00,// Char 065 (A)
    0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00,// Char 066 (B)
    0x7C, 0xC6, 0xC0, 0xC0, 0xC0, 0xC6, 0x7C, 0x00,// Char 067 (C)
    0xFC, 0x66, 0x66, 0x66, 0x66, 0x66, 0xFC, 0x00,// Char 068 (D)
    0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00,// Char 069 (E)
    0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00,// Char 070 (F)
    0x7C, 0xC6, 0xC6, 0xC0, 0xCE, 0xC6, 0x7E, 0x00,// Char 071 (G)
    0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0x00,// Char 072 (H)
    0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 073 (I)
    0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00,// Char 074 (J)
    0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00,// Char 075 (K)
    0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00,// Char 076 (L)
    0x82, 0xC6, 0xEE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00,// Char 077 (M)
    0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00,// Char 078 (N)
    0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 079 (O)
    0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00,// Char 080 (P)
    0x7C, 0xC6, 0xC6, 0xC6, 0xD6, 0xDE, 0x7C, 0x06,// Char 081 (Q)
    0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xE6, 0x00,// Char 082 (R)
    0x7C, 0xC6, 0xC0, 0x7C, 0x06, 0xC6, 0x7C, 0x00,// Char 083 (S)
    0x7E, 0x5A, 0x5A, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 084 (T)
    0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 085 (U)
    0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x10, 0x00,// Char 086 (V)
    0xC6, 0xC6, 0xD6, 0xFE, 0xEE, 0xC6, 0x82, 0x00,// Char 087 (W)
    0xC6, 0x6C, 0x38, 0x38, 0x38, 0x6C, 0xC6, 0x00,// Char 088 (X)
    0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x3C, 0x00,// Char 089 (Y)
    0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00,// Char 090 (Z)
    0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00,// Char 091 ([)
    0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00,// Char 092 (\)
    0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00,// Char 093 (])
    0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00,// Char 094 (^)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,// Char 095 (_)
    0x30, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 096 (`)
    0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,// Char 097 (a)
    0xE0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0x7C, 0x00,// Char 098 (b)
    0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x00,// Char 099 (c)
    0x1C, 0x0C, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00,// Char 100 (d)
    0x00, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00,// Char 101 (e)
    0x1C, 0x36, 0x30, 0x78, 0x30, 0x30, 0x78, 0x00,// Char 102 (f)
    0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x78,// Char 103 (g)
    0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00,// Char 104 (h)
    0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 105 (i)
    0x00, 0x0C, 0x00, 0x1C, 0x0C, 0x0C, 0xCC, 0x78,// Char 106 (j)
    0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00,// Char 107 (k)
    0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 108 (l)
    0x00, 0x00, 0xCC, 0xFE, 0xD6, 0xD6, 0xD6, 0x00,// Char 109 (m)
    0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x00,// Char 110 (n)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 111 (o)
    0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0,// Char 112 (p)
    0x00, 0x00, 0x7C, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E,// Char 113 (q)
    0x00, 0x00, 0xDE, 0x76, 0x60, 0x60, 0xF0, 0x00,// Char 114 (r)
    0x00, 0x00, 0x7C, 0xC0, 0x7C, 0x06, 0x7C, 0x00,// Char 115 (s)
    0x10, 0x30, 0xFC, 0x30, 0x30, 0x34, 0x18, 0x00,// Char 116 (t)
    0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00,// Char 117 (u)
    0x00, 0x00, 0xC6, 0xC6, 0x6C, 0x38, 0x10, 0x00,// Char 118 (v)
    0x00, 0x00, 0xC6, 0xD6, 0xD6, 0xFE, 0x6C, 0x00,// Char 119 (w)
    0x00, 0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00,// Char 120 (x)
    0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8,// Char 121 (y)
    0x00, 0x00, 0xFC, 0x98, 0x30, 0x64, 0xFC, 0x00,// Char 122 (z)
    0x0E, 0x18, 0x18, 0x30, 0x18, 0x18, 0x0E, 0x00,// Char 123 ({)
    0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00,// Char 124 (|)
    0xE0, 0x30, 0x30, 0x18, 0x30, 0x30, 0xE0, 0x00,// Char 125 (})
    0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 126 (~)
    0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0x00,// Char 127 (.)
    0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x18, 0x70,// Char 128 (.)
    0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00,// Char 129 (.)
    0x0E, 0x10, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00,// Char 130 (.)
    0x7C, 0x82, 0x38, 0x0C, 0x7C, 0xCC, 0x76, 0x00,// Char 131 (.)
    0xCC, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,// Char 132 (.)
    0xE0, 0x10, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,// Char 133 (.)
    0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,// Char 134 (.)
    0x00, 0x00, 0x7C, 0xC0, 0xC0, 0x7C, 0x18, 0x70,// Char 135 (.)
    0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00,// Char 136 (.)
    0xC6, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00,// Char 137 (.)
    0xE0, 0x10, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00,// Char 138 (.)
    0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 139 (.)
    0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 140 (.)
    0xE0, 0x10, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 141 (.)
    0xC6, 0x00, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00,// Char 142 (.)
    0x38, 0x38, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00,// Char 143 (.)
    0x0E, 0x10, 0xFE, 0x60, 0x78, 0x60, 0xFE, 0x00,// Char 144 (.)
    0x00, 0x00, 0x7C, 0x12, 0x7E, 0xD0, 0x7E, 0x00,// Char 145 (.)
    0x7E, 0xC8, 0xC8, 0xFE, 0xC8, 0xC8, 0xCE, 0x00,// Char 146 (.)
    0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 147 (.)
    0xC6, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 148 (.)
    0xE0, 0x10, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 149 (.)
    0x7C, 0x82, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00,// Char 150 (.)
    0xE0, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00,// Char 151 (.)
    0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8,// Char 152 (.)
    0xC6, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 153 (.)
    0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 154 (.)
    0x18, 0x7C, 0xD6, 0xD0, 0xD6, 0x7C, 0x18, 0x00,// Char 155 (.)
    0x38, 0x6C, 0x60, 0xF0, 0x60, 0xF2, 0xDC, 0x00,// Char 156 (.)
    0x66, 0x3C, 0x18, 0x7E, 0x18, 0x7E, 0x18, 0x00,// Char 157 (.)
    0xF8, 0xCC, 0xF8, 0xC4, 0xCC, 0xDE, 0xCC, 0x06,// Char 158 (.)
    0x0E, 0x1B, 0x18, 0x3C, 0x18, 0x18, 0xD8, 0x70,// Char 159 (.)
    0x0E, 0x10, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,// Char 160 (.)
    0x0E, 0x10, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00,// Char 161 (.)
    0x0E, 0x10, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,// Char 162 (.)
    0x0E, 0x10, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00,// Char 163 (.)
    0x66, 0x98, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x00,// Char 164 (.)
    0x66, 0x98, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0x00,// Char 165 (.)
    0x38, 0x0C, 0x3C, 0x34, 0x00, 0x7E, 0x00, 0x00,// Char 166 (.)
    0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00,// Char 167 (.)
    0x30, 0x00, 0x30, 0x60, 0xC6, 0xC6, 0x7C, 0x00,// Char 168 (.)
    0x00, 0x00, 0x00, 0xFC, 0xC0, 0xC0, 0x00, 0x00,// Char 169 (.)
    0x00, 0x00, 0x00, 0xFC, 0x0C, 0x0C, 0x00, 0x00,// Char 170 (.)
    0xC0, 0xC8, 0xD0, 0xFE, 0x46, 0x8C, 0x1E, 0x00,// Char 171 (.)
    0xC0, 0xC8, 0xD0, 0xEC, 0x5C, 0xBE, 0x0C, 0x00,// Char 172 (.)
    0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00,// Char 173 (.)
    0x00, 0x36, 0x6C, 0xD8, 0x6C, 0x36, 0x00, 0x00,// Char 174 (.)
    0x00, 0xD8, 0x6C, 0x36, 0x6C, 0xD8, 0x00, 0x00,// Char 175 (.)
    0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88,// Char 176 (.)
    0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,// Char 177 (.)
    0xDB, 0x77, 0xDB, 0xEE, 0xDB, 0x77, 0xDB, 0xEE,// Char 178 (.)
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,// Char 179 (.)
    0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18,// Char 180 (.)
    0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18,// Char 181 (.)
    0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36,// Char 182 (.)
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36,// Char 183 (.)
    0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18,// Char 184 (.)
    0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36,// Char 185 (.)
    0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,// Char 186 (.)
    0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36,// Char 187 (.)
    0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00,// Char 188 (.)
    0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00,// Char 189 (.)
    0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00,// Char 190 (.)
    0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18,// Char 191 (.)
    0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00,// Char 192 (.)
    0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00,// Char 193 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18,// Char 194 (.)
    0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18,// Char 195 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 196 (.)
    0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18,// Char 197 (.)
    0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18,// Char 198 (.)
    0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36,// Char 199 (.)
    0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00,// Char 200 (.)
    0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36,// Char 201 (.)
    0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 202 (.)
    0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36,// Char 203 (.)
    0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36,// Char 204 (.)
    0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 205 (.)
    0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36,// Char 206 (.)
    0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00,// Char 207 (.)
    0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00,// Char 208 (.)
    0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18,// Char 209 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36,// Char 210 (.)
    0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00,// Char 211 (.)
    0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00,// Char 212 (.)
    0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18,// Char 213 (.)
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36,// Char 214 (.)
    0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36,// Char 215 (.)
    0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18,// Char 216 (.)
    0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00,// Char 217 (.)
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18,// Char 218 (.)
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,// Char 219 (.)
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,// Char 220 (.)
    0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,// Char 221 (.)
    0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,// Char 222 (.)
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,// Char 223 (.)
    0x00, 0x00, 0x74, 0xCC, 0xC8, 0xDC, 0x76, 0x00,// Char 224 (.)
    0x78, 0xCC, 0xD8, 0xCC, 0xC6, 0xC6, 0xDC, 0x40,// Char 225 (.)
    0xFE, 0x62, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00,// Char 226 (.)
    0x00, 0x02, 0x7E, 0xEC, 0x6C, 0x6C, 0x48, 0x00,// Char 227 (.)
    0xFE, 0x62, 0x30, 0x18, 0x30, 0x62, 0xFE, 0x00,// Char 228 (.)
    0x00, 0x00, 0x7E, 0xD0, 0xC8, 0xC8, 0x70, 0x00,// Char 229 (.)
    0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xF8, 0x80,// Char 230 (.)
    0x00, 0x00, 0x7E, 0xD8, 0x18, 0x18, 0x10, 0x00,// Char 231 (.)
    0x38, 0x10, 0x7C, 0xD6, 0xD6, 0x7C, 0x10, 0x38,// Char 232 (.)
    0x7C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0x7C, 0x00,// Char 233 (.)
    0x7C, 0xC6, 0xC6, 0xC6, 0x6C, 0x28, 0xEE, 0x00,// Char 234 (.)
    0x3C, 0x22, 0x18, 0x7C, 0xCC, 0xCC, 0x78, 0x00,// Char 235 (.)
    0x00, 0x00, 0x66, 0x99, 0x99, 0x66, 0x00, 0x00,// Char 236 (.)
    0x00, 0x06, 0x7C, 0x9E, 0xF2, 0x7C, 0xC0, 0x00,// Char 237 (.)
    0x00, 0x00, 0x7C, 0xC0, 0xF8, 0xC0, 0x7C, 0x00,// Char 238 (.)
    0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00,// Char 239 (.)
    0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00,// Char 240 (.)
    0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00,// Char 241 (.)
    0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7C, 0x00,// Char 242 (.)
    0x18, 0x30, 0x60, 0x30, 0x18, 0x00, 0x7C, 0x00,// Char 243 (.)
    0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18,// Char 244 (.)
    0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70,// Char 245 (.)
    0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x00,// Char 246 (.)
    0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00,// Char 247 (.)
    0x38, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,// Char 248 (.)
    0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,// Char 249 (.)
    0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,// Char 250 (.)
    0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x00,// Char 251 (.)
    0xD8, 0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00,// Char 252 (.)
    0xF0, 0x30, 0xC0, 0xF0, 0x00, 0x00, 0x00, 0x00,// Char 253 (.)
    0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00,// Char 254 (.)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00// Char 255 (.)
};
#endif

/*****************************************************************************
 * Method: drawChar(char c, int x = x_cursor, int y = y_cursor, char r = 0, char g = 255, char b = 30)
 *
 * @description
 *******************************************************************************/
void drawChar(char c, int x = x_cursor, int y = y_cursor, char r = 0, char g = 255, char b = 30);

/*****************************************************************************
 * Method: drawChar(char c, int x, int y, char r, char g, char b)
 *
 * @description
 *******************************************************************************/
void drawChar(char c, int x, int y, char r, char g, char b) {
    int offset = x * 3 * 8 + y * SCREEN_WIDTH * 3 * 8;

    for (int i = 0; i < 8; i++) {
        // every row
        int pixel = font[c * 8 + i];
        for (int j = 0; j < 8; j++) {
            int v = (pixel & (1 << (7 - j))) > 0;

            screen[offset + i * SCREEN_WIDTH * 3 + j * 3] = v * b;
            screen[offset + i * SCREEN_WIDTH * 3 + j * 3 + 1] = v * g;
            screen[offset + i * SCREEN_WIDTH * 3 + j * 3 + 2] = v * r;
        }
    }
}

/*****************************************************************************
 * Method: drawRect(int x, int y, int width)
 *
 * @description
 *******************************************************************************/
void drawRect(int x, int y, int width) {
    int r = 255;
    int g = 0;
    int b = 0;

    for (int i = x * 3; i < x * 3 + width * 3; i += 3) {
        screen[i + y * SCREEN_WIDTH * 3] = b;
        screen[i + 1 + y * SCREEN_WIDTH * 3] = g;
        screen[i + 2 + y * SCREEN_WIDTH * 3] = r;
    }
}

BeagleBoardDSS::BeagleBoardDSS(T_BeagleBoardDSS_Init *init) :
        CharacterDevice(false, init->Name) {
    /* create a new framebuffer for rendering*/
    this->framebuffer = new SharedMemResource(FRAMEBUFFER_SIZE, "fb0");

    LOG(ARCH, INFO,"BeagleBoardDSS: Framebuffer @ 0x%x, size: %d", framebuffer->getPhysicalStartAddress(),FRAMEBUFFER_SIZE);
    LOG(ARCH, INFO,"BeagleBoardDSS: Clearing Framebuffer.. [%d MB]", FRAMEBUFFER_SIZE / (1024 * 1024));

    if (framebuffer->getPhysicalStartAddress() != 0) {
        memsetlong((void*) framebuffer->getPhysicalStartAddress(), 0x30303030, FRAMEBUFFER_SIZE / 4);
        screen = (char*) framebuffer->getPhysicalStartAddress();
    }

    LOG(ARCH, INFO, "BeagleBoardDSS: Framebuffer cleared..");
}

BeagleBoardDSS::~BeagleBoardDSS() {
}

/*****************************************************************************
 * Method: BeagleBoardDSS::writeByte(char byte)
 *
 * @description
 *******************************************************************************/
ErrorT BeagleBoardDSS::writeByte(char byte) {
    if (byte == '\n')
        return (cOk);

    if (byte != '\r') {
        drawChar(byte);

        if (y_cursor > 60)
            drawChar(byte, x_cursor, y_cursor - 60);

        x_cursor++;
        if (x_cursor > 79) {
            x_cursor = 0;
            y_cursor++;
        }
    } else {
        x_cursor = 0;
        y_cursor++;
        // clear the current line
        memsetlong((void*) (((unint) &screen) + SCREEN_WIDTH * 3 * 8 * y_cursor), (int) 0, 3840);
        if (y_cursor > 60)
            memsetlong((void*) (((unint) &screen) + SCREEN_WIDTH * 3 * 8 * (y_cursor - 60)), (int) 0, 3840);
    }

    if (y_cursor > 60 && y_cursor < 120) {
        *((unint *) 0x48050480) = ((unint) &screen) + SCREEN_WIDTH * 3 * 8 * (y_cursor - 60);
        *((unint *) 0x48050484) = ((unint) &screen) + SCREEN_WIDTH * 3 * 8 * (y_cursor - 60);

        *((unint *) 0x48050440) = 0x0001836b;

        //*((unint *) 0x48050488) = ((y_cursor - 59)*8) << 16;

        memcpy(&screen, (void*) (((unint) &screen) + 640 * 3 * 8), 640 * 480 * 3 - 640 * 3 * 8);
        memset((void*) (((unint) &screen) + 640 * 480 * 3 - 640 * 3 * 8), (char) 0, 640 * 3 * 8);
    } else if (y_cursor >= 120) {
        y_cursor = 60;

        *((unint *) 0x48050480) = ((unint) &screen);
        *((unint *) 0x48050484) = ((unint) &screen);

        *((unint *) 0x48050440) = 0x0001836b;
    }

    return (cOk);
}

/*****************************************************************************
 * Method: BeagleBoardDSS::writeBytes(const char* bytes, unint4 length)
 *
 * @description
 *******************************************************************************/
ErrorT BeagleBoardDSS::writeBytes(const char* bytes, unint4 length) {
    for (unint i = 0; i < length; i++)
        writeByte(bytes[i]);

    return cOk ;
}

#define CM_IDLEST_CKGEN *((unint *) 0x48004D20)
#define REG_PRM_CLKSEL *((unint *) 0x48306D40)

#define REG_PRM_CLKSRC_CTRL *((unint *) 0x48307270)

//#define DISPC_CONTROL *((unint *) 0x48000440)
#define DISPC_CONTROL *((unint *) 0x48050440)

#define DISPC_IRQSTATUS *((unint *) 0x48000418)

#define CM_CLKSEL1_PLL *((unint *) 0x48004D40)
#define CM_CLKSEL2_PLL *((unint *) 0x48004D44)
#define CM_CLKSEL3_PLL *((unint *) 0x48004D48)
#define CM_CLKSEL4_PLL *((unint *) 0x48004D4c)
#define CM_CLKSEL5_PLL *((unint *) 0x48004D50)

#define CM_CLKOUT_CTRL *((unint *) 0x48004D70)

#define CM_CLKSEL_DSS  *((unint *) 0x48004e40)
#define DISPC_DIVISOR *((unint *) 0x48050470)

#define CM_FCLKEN_DSS *((unint *) 0x48004e00)
#define CM_ICLKEN_DSS *((unint *) 0x48004e10)
#define DSS_SYSCONFIG  *((unint *) 0x48050010)
#define DSS_SYSSTATUS *((unint *) 0x48050014)

/*****************************************************************************
 * Method: BeagleBoardDSS::init()
 *
 * @description
 *******************************************************************************/
void BeagleBoardDSS::init() {
    /* TODO: used structs for access to registers to make this portable! */

    // get system clock to calculate pixel and DSS1_ALWON clock
    unint sys_clk = REG_PRM_CLKSEL;
    unint sys_clock = 26000;

    if (sys_clk == 4)
        sys_clock = 38400;
    else if (sys_clk == 3)
        sys_clock = 26000;
    else if (sys_clk == 2)
        sys_clock = 19200;
    else if (sys_clk == 1)
        sys_clock = 13000;
    else if (sys_clk == 0)
        sys_clock = 12000;

    // 3 = 26 MHZ
    // 4 = 38.4 MHZ

    struct disp_setting *disp = &disp_settings[config];
    LOG(ARCH, INFO, "Screen Settings: width=%d height=%d pixelclock=%d", disp->width, disp->height, disp->freq);
    LOG(ARCH, INFO, "hfp=%d hbp=%d hsw=%d", disp->hfp, disp->hbp, disp->hsw);
    LOG(ARCH, INFO, "vfp=%d vbp=%d vsw=%d", disp->vfp, disp->vbp, disp->vsw);

    writeBytes("This is the ORCOS framebuffer..", 31);

    // reset DSS
    /*    printf("Resetting DSS!\r");
     DISPC_CONTROL = 0;
     DISPC_IRQSTATUS = 1;
     while ((DISPC_IRQSTATUS & 0x1) != 1) {};
     CM_FCLKEN_DSS = 0x7;
     CM_ICLKEN_DSS = 1;
     DSS_SYSCONFIG = 2;
     while ((DSS_SYSSTATUS & 0x1) != 1) {};
     printf("Reset successfull... \r");*/

    // DPLL4 clock = 864 MHZ
    //CM_CLKSEL2_PLL = 0x0001b00c;
    //CM_CLKSEL3_PLL = 0x00000009;
    unint m = (CM_CLKSEL2_PLL >> 8) & 0x7ff;
    unint n = CM_CLKSEL2_PLL & 0x7f;
    unint dpll4_clock = (sys_clock * m) / (n + 1);
    //printf("DPLL4_CLOCK        = %d kHz ", dpll4_clock);
    //printf("[m = %d, n = %d]\r",m,n);
    //printf("DPLL4_AWON_FCLKOUT = %d kHz \r", dpll4_clock * 2);

    unint mhz96clock = dpll4_clock / (CM_CLKSEL3_PLL & 0x1f);
    //printf("96Mhz Clock        = %d kHz \r", mhz96clock);
    //printf("DIV_96M            = %d\r",(CM_CLKSEL3_PLL & 0x1f));

    unint divm = 6;
    unint divm2 = 6;
    unint diff = 1000000000;

    CM_CLKSEL_DSS = 0x00001000 | 9;  //| divm;

    unint div1 = CM_CLKSEL_DSS & 0x1f;
    //unint dss1_alwon_fclk = dpll4_clock * 2 / div1;
    unint dss1_alwon_fclk = dpll4_clock / div1;
    // dss1_alwon_fclk max 173 mhz -- best 96 mhz
    LOG(ARCH, INFO, "DSS1_ALWON_FCLK    = %d khZ [div = %d]", dss1_alwon_fclk, div1);

    // CM_CLKEN_PLL
    *((unint *) 0x48004D00) = 0x00370037;

    // PERIPH_DPLL_FREQSEL = 0.75 - 1 MHZ

    // DSS_SYSCONFIG
    *((unint *) 0x48050010) = 0x00000001;
    //DSS_CONTROL
    *((unint *) 0x48050040) = 0x00000078;
    // DSS_SDI_CONTROL
    *((unint *) 0x48050044) = 0x00000000;
    // DSS_PLL_CONTROL
    *((unint *) 0x48050048) = 0x00000000;

    *((unint *) 0x48050050) = 0x00000000;

    *((unint *) 0x48050058) = 0x00000000;

    // DISPC_SYSCONFIG
    *((unint *) 0x48050410) = 0x00002015;
    //*((unint *) 0x48050410) = 0x0000100c;

    LOG(ARCH, INFO, "Resetting DSS..");

    *((unint *) 0x48050414) = 0x00000001;

    volatile int timeout = 100000000;

    // READ_ONLY: DISPC_SYSSTATUS
    while (*((unint *) 0x48050414) == 0 && (timeout-- > 0)) {
    };

    if (timeout <= 0) {
        LOG(ARCH, ERROR, "Timeout resetting display. DSS not functional.");
        return;
    }

    LOG(ARCH, INFO, "Resetting complete");

    //DISPC_CONFIG
    *((unint *) 0x48050444) = 0x00000004;
    //*((unint *) 0x48050444) = 0x000000cc;

    // COLORS
    *((unint *) 0x4805044c) = 0xFFFFFFFF;
    *((unint *) 0x48050450) = 0x00000000;
    *((unint *) 0x48050454) = 0x00000000;
    *((unint *) 0x48050458) = 0x00000000;

    //DISPC_TIMING_H
    //*((unint *) 0x48050464) = 0x0ff03f31;

    /*


     .timing_h    = 0x1a4024c9,
     .timing_v    = 0x02c00509,
     .pol_freq    = 0x00007028,
     .divisor    = 0x00010001, // 96MHz Pixel Clock
     .lcd_size    = 0x02ff03ff, // 1024x768

     */

    unint timingh = ((disp->hsw - 1) & 0xff) | (((disp->hfp - 1) & 0xfff) << 8) | (((disp->hbp - 1) & 0xfff) << 20);

    timingh = 0x1a4024c9;
    *((unint *) 0x48050464) = timingh;
    LOG(ARCH, INFO, "TIMING_H           = %x", timingh);
    //DISPC_TIMING_V
    //*((unint *) 0x48050468) = 0x01400504;

    unint timingv = ((disp->vsw - 1) & 0xff) | ((disp->vfp & 0xfff) << 8) | ((disp->vbp & 0xfff) << 20);
    timingv = 0x02c00509;

    *((unint *) 0x48050468) = timingv;
    LOG(ARCH, INFO, "TIMING_V           = %x", timingv);

    // 1 = falling edge -sync
    // 0 = rising edge +sync
    unint sync = disp->vsync;

    unint inverthsync = 0;
    unint invertvsync = 0;
    unint ac_bias = 1;

    //DISPC_POL_FREQ
    //*((unint *) 0x4805046c) = 0x00007028 | sync << 16 | 1 << 17;
    //*((unint *) 0x4805046c) = 0x00000028 | sync << 16 | 0 << 17 | inverthsync << 13 | invertvsync << 12 | ac_bias << 15;
    *((unint *) 0x4805046c) = 0x00007028;

    //DISPC_DIVISOR
    //*((unint *) 0x48050470) = 0x00010002;

    //640*480
    //*((unint *) 0x48050470) = 0x00010004;

    DISPC_DIVISOR = 0x00010001;  // | divm2;

    //DISPC_DIVISOR = 18 << 16 | 18;// | divm2;

    //1024*768
    //*((unint *) 0x48050470) = 0x00010002;

    // 800*600
    //DISPC_DIVISOR = 0x00010005;

    unint PCD = DISPC_DIVISOR & 0xff;
    unint LCD = (DISPC_DIVISOR >> 16) & 0xff;
    unint pixel_clock = dss1_alwon_fclk / (LCD * PCD);
    unint logic_clock = dss1_alwon_fclk / LCD;
    LOG(ARCH, INFO, "Pixel Clock        = %d kHz [PCD = %d]", pixel_clock, PCD);
    LOG(ARCH, INFO, "Logic Clock        = %d kHz [LCD = %d]", logic_clock, LCD);

    //float fps =

    unint r = (disp->hsw) + disp->hfp + disp->width + disp->hbp;
    unint s = disp->vsw + disp->vfp + disp->vbp + disp->height;
    r = r * s;
    LOG(ARCH, INFO, "Pixels             = %d", r);

    unint period = 10000000 / pixel_clock;  // = (1 / pixelclock) * 1000
    r = r * period / 10;
    LOG(ARCH, INFO, "pixel period = %d, r =%d", period, r);
    unint fps = 1000000000 / r;
    LOG(ARCH, INFO, "fps  = %dHz", fps);

    //DISPC_SIZE_DIG
    //*((unint *) 0x48050478) = 0x00ef027f;

    //DISPC_SIZE_LCD
    //*((unint *) 0x4805047c) = 0x02cf04ff;
    // 1024 * 768
    //*((unint *) 0x4805047c) = 0x02ff03ff;
    //640*480

    *((unint *) 0x4805047c) = (disp->width - 1) | (disp->height - 1) << 16;

    //*((unint *) 0x4805047c) = 0x01df027f;
    // 800*600
    //*((unint *) 0x4805047c) = 0x0257031f;

    // DISPC_GFX_SIZE 1280 * 720
    //*((unint *) 0x4805048c) = 0x02cf04ff;
    // 1024 * 768
    //*((unint *) 0x4805048c) = 0x02ff03ff;

    // 800*600
    //*((unint *) 0x4805048c) = 0x0257031f;
    //640*480
    //*((unint *) 0x4805048c) = 0x01df027f;

    *((unint *) 0x4805048c) = (disp->width - 1) | (disp->height - 1) << 16;

    // SET SCREEN FRAMEBUFFER ADDRESS
    *((unint *) 0x48050480) = framebuffer->getPhysicalStartAddress();
    *((unint *) 0x48050484) = framebuffer->getPhysicalStartAddress();
    ;

    // DISPC_GFX_POSITION
    *((unint *) 0x48050488) = 0x00000000;

    // DISPC_GFX_ATTRIBUTES
    //*((unint *) 0x480504a0) = 0x0000008d;

    // RGB 24 bit framebuffer
    //*((unint *) 0x480504a0) = 0x00000093;

    // ARGB 32 bit framebuffer
    //*((unint *) 0x480504a0) = 0x00000099;
//19

    // RGB 12 bit (unpacked in 16 bit)
    *((unint *) 0x480504a0) = 0x00000089;

    // DISPC_GFX_FIFO_TRESHHOLD
    *((unint *) 0x480504a4) = 0x03fc03bc;
    //*((unint *) 0x480504a4) = 0x03ff03c0;

    // DISPC_GFX_FIFO_SIZE
    *((unint *) 0x480504a8) = 0x000003ff;

    // ROW_INC
    *((unint *) 0x480504ac) = 0x00000001;
    //*((unint *) 0x480504b0) = 0x00000001;

    // PIXEL_INC
    *((unint *) 0x480504b0) = 0x00000001;

    // WInDOW_SKIP
    *((unint *) 0x480504b4) = 0x00000000;

    //*((unint *) 0x480504b8) = 0x807ff000;

    //SET FRAMEBUFFER ALPHA BUFFER
    //    *((unint *) 0x480504b8) = (unint) &screen;

    LOG(ARCH, INFO, "DSS: starting display output...");

    *((unint *) 0x480504cc) = 0x00083F7;

    DISPC_CONTROL = 0x0001836b;
}
